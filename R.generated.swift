//
// This is a generated file, do not edit!
// Generated by R.swift, see https://github.com/mac-cain13/R.swift
//

import Foundation
import RswiftResources
import UIKit

private class BundleFinder {}
let R = _R(bundle: Bundle(for: BundleFinder.self))

struct _R {
  let bundle: Foundation.Bundle

  let entitlements = entitlements()

  var string: string { .init(bundle: bundle, preferredLanguages: nil, locale: nil) }
  var color: color { .init(bundle: bundle) }
  var image: image { .init(bundle: bundle) }
  var file: file { .init(bundle: bundle) }
  var nib: nib { .init(bundle: bundle) }
  var storyboard: storyboard { .init(bundle: bundle) }

  func string(bundle: Foundation.Bundle) -> string {
    .init(bundle: bundle, preferredLanguages: nil, locale: nil)
  }
  func string(locale: Foundation.Locale) -> string {
    .init(bundle: bundle, preferredLanguages: nil, locale: locale)
  }
  func string(preferredLanguages: [String], locale: Locale? = nil) -> string {
    .init(bundle: bundle, preferredLanguages: preferredLanguages, locale: locale)
  }
  func color(bundle: Foundation.Bundle) -> color {
    .init(bundle: bundle)
  }
  func image(bundle: Foundation.Bundle) -> image {
    .init(bundle: bundle)
  }
  func file(bundle: Foundation.Bundle) -> file {
    .init(bundle: bundle)
  }
  func nib(bundle: Foundation.Bundle) -> nib {
    .init(bundle: bundle)
  }
  func storyboard(bundle: Foundation.Bundle) -> storyboard {
    .init(bundle: bundle)
  }
  func validate() throws {
    try self.nib.validate()
    try self.storyboard.validate()
  }

  struct project {
    let developmentRegion = "en"
  }

  /// This `_R.string` struct is generated, and contains static references to 3 localization tables.
  struct string {
    let bundle: Foundation.Bundle
    let preferredLanguages: [String]?
    let locale: Locale?
    var infoPlist: infoPlist { .init(source: .init(bundle: bundle, tableName: "InfoPlist", preferredLanguages: preferredLanguages, locale: locale)) }
    var launchScreen: launchScreen { .init(source: .init(bundle: bundle, tableName: "LaunchScreen", preferredLanguages: preferredLanguages, locale: locale)) }
    var localizable: localizable { .init(source: .init(bundle: bundle, tableName: "Localizable", preferredLanguages: preferredLanguages, locale: locale)) }

    func infoPlist(preferredLanguages: [String]) -> infoPlist {
      .init(source: .init(bundle: bundle, tableName: "InfoPlist", preferredLanguages: preferredLanguages, locale: locale))
    }
    func launchScreen(preferredLanguages: [String]) -> launchScreen {
      .init(source: .init(bundle: bundle, tableName: "LaunchScreen", preferredLanguages: preferredLanguages, locale: locale))
    }
    func localizable(preferredLanguages: [String]) -> localizable {
      .init(source: .init(bundle: bundle, tableName: "Localizable", preferredLanguages: preferredLanguages, locale: locale))
    }


    /// This `_R.string.infoPlist` struct is generated, and contains static references to 1 localization keys.
    struct infoPlist {
      let source: RswiftResources.StringResource.Source

      /// en translation: Wecyn
      ///
      /// Key: CFBundleDisplayName
      ///
      /// Locales: en, zh-Hans
      var cfBundleDisplayName: RswiftResources.StringResource { .init(key: "CFBundleDisplayName", tableName: "InfoPlist", source: source, developmentValue: "Wecyn", comment: nil) }
    }

    /// This `_R.string.launchScreen` struct is generated, and contains static references to 0 localization keys.
    struct launchScreen {
      let source: RswiftResources.StringResource.Source
    }

    /// This `_R.string.localizable` struct is generated, and contains static references to 273 localization keys.
    struct localizable {
      let source: RswiftResources.StringResource.Source

      /// en translation: About Wecyn
      ///
      /// Key: About Wecyn
      ///
      /// Locales: en, zh-Hans
      var aboutWecyn: RswiftResources.StringResource { .init(key: "About Wecyn", tableName: "Localizable", source: source, developmentValue: "About Wecyn", comment: nil) }

      /// en translation: Account Manage
      ///
      /// Key: Account Manage
      ///
      /// Locales: en, zh-Hans
      var accountManage: RswiftResources.StringResource { .init(key: "Account Manage", tableName: "Localizable", source: source, developmentValue: "Account Manage", comment: nil) }

      /// en translation: Activity
      ///
      /// Key: Activity
      ///
      /// Locales: en, zh-Hans
      var activity: RswiftResources.StringResource { .init(key: "Activity", tableName: "Localizable", source: source, developmentValue: "Activity", comment: nil) }

      /// en translation: Color Remark
      ///
      /// Key: Color Remark
      ///
      /// Locales: en, zh-Hans
      var colorRemark: RswiftResources.StringResource { .init(key: "Color Remark", tableName: "Localizable", source: source, developmentValue: "Color Remark", comment: nil) }

      /// en translation: Contact us
      ///
      /// Key: Contact us
      ///
      /// Locales: en, zh-Hans
      var contactUs: RswiftResources.StringResource { .init(key: "Contact us", tableName: "Localizable", source: source, developmentValue: "Contact us", comment: nil) }

      /// en translation: Education
      ///
      /// Key: Education
      ///
      /// Locales: en, zh-Hans
      var education: RswiftResources.StringResource { .init(key: "Education", tableName: "Localizable", source: source, developmentValue: "Education", comment: nil) }

      /// en translation: Experience
      ///
      /// Key: Experience
      ///
      /// Locales: en, zh-Hans
      var experience: RswiftResources.StringResource { .init(key: "Experience", tableName: "Localizable", source: source, developmentValue: "Experience", comment: nil) }

      /// en translation: ID number
      ///
      /// Key: ID号
      ///
      /// Locales: en
      var id号: RswiftResources.StringResource { .init(key: "ID号", tableName: "Localizable", source: source, developmentValue: "ID number", comment: nil) }

      /// en translation: ID copied
      ///
      /// Key: ID已复制
      ///
      /// Locales: en
      var id已复制: RswiftResources.StringResource { .init(key: "ID已复制", tableName: "Localizable", source: source, developmentValue: "ID copied", comment: nil) }

      /// en translation: Interests
      ///
      /// Key: Interests
      ///
      /// Locales: en, zh-Hans
      var interests: RswiftResources.StringResource { .init(key: "Interests", tableName: "Localizable", source: source, developmentValue: "Interests", comment: nil) }

      /// en translation: Language
      ///
      /// Key: Language
      ///
      /// Locales: en, zh-Hans
      var language: RswiftResources.StringResource { .init(key: "Language", tableName: "Localizable", source: source, developmentValue: "Language", comment: nil) }

      /// en translation: Logout
      ///
      /// Key: Logout
      ///
      /// Locales: en, zh-Hans
      var logout: RswiftResources.StringResource { .init(key: "Logout", tableName: "Localizable", source: source, developmentValue: "Logout", comment: nil) }

      /// en translation: Notification
      ///
      /// Key: Notification
      ///
      /// Locales: en, zh-Hans
      var notification: RswiftResources.StringResource { .init(key: "Notification", tableName: "Localizable", source: source, developmentValue: "Notification", comment: nil) }

      /// en translation: Privacy Agreement
      ///
      /// Key: Privacy Agreement
      ///
      /// Locales: en, zh-Hans
      var privacyAgreement: RswiftResources.StringResource { .init(key: "Privacy Agreement", tableName: "Localizable", source: source, developmentValue: "Privacy Agreement", comment: nil) }

      /// en translation: Settings
      ///
      /// Key: Settings
      ///
      /// Locales: en, zh-Hans
      var settings: RswiftResources.StringResource { .init(key: "Settings", tableName: "Localizable", source: source, developmentValue: "Settings", comment: nil) }

      /// en translation: Skills
      ///
      /// Key: Skills
      ///
      /// Locales: en, zh-Hans
      var skills: RswiftResources.StringResource { .init(key: "Skills", tableName: "Localizable", source: source, developmentValue: "Skills", comment: nil) }

      /// en translation: TimeZone
      ///
      /// Key: TimeZone
      ///
      /// Locales: en, zh-Hans
      var timeZone: RswiftResources.StringResource { .init(key: "TimeZone", tableName: "Localizable", source: source, developmentValue: "TimeZone", comment: nil) }

      /// en translation: Version
      ///
      /// Key: Version
      ///
      /// Locales: en, zh-Hans
      var version: RswiftResources.StringResource { .init(key: "Version", tableName: "Localizable", source: source, developmentValue: "Version", comment: nil) }

      /// en translation: [offline]
      ///
      /// Key: [离线]
      ///
      /// Locales: en
      var 离线: RswiftResources.StringResource { .init(key: "[离线]", tableName: "Localizable", source: source, developmentValue: "[offline]", comment: nil) }

      /// en translation: [Custom Message]
      ///
      /// Key: [自定义消息]
      ///
      /// Locales: en
      var 自定义消息: RswiftResources.StringResource { .init(key: "[自定义消息]", tableName: "Localizable", source: source, developmentValue: "[Custom Message]", comment: nil) }

      /// en translation: [Custom Expressions]
      ///
      /// Key: [自定义表情]
      ///
      /// Locales: en
      var 自定义表情: RswiftResources.StringResource { .init(key: "[自定义表情]", tableName: "Localizable", source: source, developmentValue: "[Custom Expressions]", comment: nil) }

      /// en translation: [Audio]
      ///
      /// Key: [语音]
      ///
      /// Locales: en
      var 语音: RswiftResources.StringResource { .init(key: "[语音]", tableName: "Localizable", source: source, developmentValue: "[Audio]", comment: nil) }

      /// en translation: Add new section
      ///
      /// Key: add_new_section
      ///
      /// Locales: en, zh-Hans
      var add_new_section: RswiftResources.StringResource { .init(key: "add_new_section", tableName: "Localizable", source: source, developmentValue: "Add new section", comment: nil) }

      /// en translation: Pull down to refresh
      ///
      /// Key: pull_down_to_refresh
      ///
      /// Locales: en, zh-Hans
      var pull_down_to_refresh: RswiftResources.StringResource { .init(key: "pull_down_to_refresh", tableName: "Localizable", source: source, developmentValue: "Pull down to refresh", comment: nil) }

      /// en translation: Pull up to load more
      ///
      /// Key: pull_up_to_refresh
      ///
      /// Locales: en, zh-Hans
      var pull_up_to_refresh: RswiftResources.StringResource { .init(key: "pull_up_to_refresh", tableName: "Localizable", source: source, developmentValue: "Pull up to load more", comment: nil) }

      /// en translation: Release to refresh
      ///
      /// Key: release_refresh
      ///
      /// Locales: en, zh-Hans
      var release_refresh: RswiftResources.StringResource { .init(key: "release_refresh", tableName: "Localizable", source: source, developmentValue: "Release to refresh", comment: nil) }

      /// en translation: View Calendar
      ///
      /// Key: view_calendar
      ///
      /// Locales: en, zh-Hans
      var view_calendar: RswiftResources.StringResource { .init(key: "view_calendar", tableName: "Localizable", source: source, developmentValue: "View Calendar", comment: nil) }

      /// en translation: View BusinessCard
      ///
      /// Key: view_namecard
      ///
      /// Locales: en, zh-Hans
      var view_namecard: RswiftResources.StringResource { .init(key: "view_namecard", tableName: "Localizable", source: source, developmentValue: "View BusinessCard", comment: nil) }

      /// en translation: pull up to refresh
      ///
      /// Key: 上拉加载更多
      ///
      /// Locales: en
      var 上拉加载更多: RswiftResources.StringResource { .init(key: "上拉加载更多", tableName: "Localizable", source: source, developmentValue: "pull up to refresh", comment: nil) }

      /// en translation: pull down to refresh
      ///
      /// Key: 下拉刷新
      ///
      /// Locales: en
      var 下拉刷新: RswiftResources.StringResource { .init(key: "下拉刷新", tableName: "Localizable", source: source, developmentValue: "pull down to refresh", comment: nil) }

      /// en translation: unsupported message type
      ///
      /// Key: 不支持的消息类型
      ///
      /// Locales: en
      var 不支持的消息类型: RswiftResources.StringResource { .init(key: "不支持的消息类型", tableName: "Localizable", source: source, developmentValue: "unsupported message type", comment: nil) }

      /// en translation: Cannot send text message
      ///
      /// Key: 不能发送短信
      ///
      /// Locales: en
      var 不能发送短信: RswiftResources.StringResource { .init(key: "不能发送短信", tableName: "Localizable", source: source, developmentValue: "Cannot send text message", comment: nil) }

      /// en translation: Communicate and collaborate with members
      ///
      /// Key: 与成员一起沟通协作
      ///
      /// Locales: en
      var 与成员一起沟通协作: RswiftResources.StringResource { .init(key: "与成员一起沟通协作", tableName: "Localizable", source: source, developmentValue: "Communicate and collaborate with members", comment: nil) }

      /// en translation: Profile
      ///
      /// Key: 个人资料
      ///
      /// Locales: en
      var 个人资料: RswiftResources.StringResource { .init(key: "个人资料", tableName: "Localizable", source: source, developmentValue: "Profile", comment: nil) }

      /// en translation: Skills
      ///
      /// Key: 主要技能
      ///
      /// Locales: en
      var 主要技能: RswiftResources.StringResource { .init(key: "主要技能", tableName: "Localizable", source: source, developmentValue: "Skills", comment: nil) }

      /// en translation: QR code business card
      ///
      /// Key: 二维码名片
      ///
      /// Locales: en
      var 二维码名片: RswiftResources.StringResource { .init(key: "二维码名片", tableName: "Localizable", source: source, developmentValue: "QR code business card", comment: nil) }

      /// en translation: Today
      ///
      /// Key: 今日
      ///
      /// Locales: en
      var 今日: RswiftResources.StringResource { .init(key: "今日", tableName: "Localizable", source: source, developmentValue: "Today", comment: nil) }

      /// en translation: you 
      ///
      /// Key: 你
      ///
      /// Locales: en
      var 你: RswiftResources.StringResource { .init(key: "你", tableName: "Localizable", source: source, developmentValue: "you ", comment: nil) }

      /// en translation: You have been added as friends
      ///
      /// Key: 你们已成功加为好友
      ///
      /// Locales: en
      var 你们已成功加为好友: RswiftResources.StringResource { .init(key: "你们已成功加为好友", tableName: "Localizable", source: source, developmentValue: "You have been added as friends", comment: nil) }

      /// en translation: you have set the conversation no disturb off
      ///
      /// Key: 你已关闭此会话消息免打扰
      ///
      /// Locales: en
      var 你已关闭此会话消息免打扰: RswiftResources.StringResource { .init(key: "你已关闭此会话消息免打扰", tableName: "Localizable", source: source, developmentValue: "you have set the conversation no disturb off", comment: nil) }

      /// en translation: you have blocked the chat
      ///
      /// Key: 你已屏蔽该群聊
      ///
      /// Locales: en
      var 你已屏蔽该群聊: RswiftResources.StringResource { .init(key: "你已屏蔽该群聊", tableName: "Localizable", source: source, developmentValue: "you have blocked the chat", comment: nil) }

      /// en translation: you have set the conversation no disturb on
      ///
      /// Key: 你已开启此会话消息免打扰
      ///
      /// Locales: en
      var 你已开启此会话消息免打扰: RswiftResources.StringResource { .init(key: "你已开启此会话消息免打扰", tableName: "Localizable", source: source, developmentValue: "you have set the conversation no disturb on", comment: nil) }

      /// en translation: you have unblocked the chat
      ///
      /// Key: 你已解除屏蔽该群聊
      ///
      /// Locales: en
      var 你已解除屏蔽该群聊: RswiftResources.StringResource { .init(key: "你已解除屏蔽该群聊", tableName: "Localizable", source: source, developmentValue: "you have unblocked the chat", comment: nil) }

      /// en translation: you revoked a message
      ///
      /// Key: 你撤回了一条消息
      ///
      /// Locales: en
      var 你撤回了一条消息: RswiftResources.StringResource { .init(key: "你撤回了一条消息", tableName: "Localizable", source: source, developmentValue: "you revoked a message", comment: nil) }

      /// en translation: Are you sure you want to log out?
      ///
      /// Key: 你确定要登出吗？
      ///
      /// Locales: en
      var 你确定要登出吗: RswiftResources.StringResource { .init(key: "你确定要登出吗？", tableName: "Localizable", source: source, developmentValue: "Are you sure you want to log out?", comment: nil) }

      /// en translation: You need to send a verification application and wait for the other party to pass it
      ///
      /// Key: 你需要发送验证申请，等对方通过
      ///
      /// Locales: en
      var 你需要发送验证申请等对方通过: RswiftResources.StringResource { .init(key: "你需要发送验证申请，等对方通过", tableName: "Localizable", source: source, developmentValue: "You need to send a verification application and wait for the other party to pass it", comment: nil) }

      /// en translation: secrecy
      ///
      /// Key: 保密
      ///
      /// Locales: en
      var 保密: RswiftResources.StringResource { .init(key: "保密", tableName: "Localizable", source: source, developmentValue: "secrecy", comment: nil) }

      /// en translation: modify nickname
      ///
      /// Key: 修改昵称
      ///
      /// Locales: en
      var 修改昵称: RswiftResources.StringResource { .init(key: "修改昵称", tableName: "Localizable", source: source, developmentValue: "modify nickname", comment: nil) }

      /// en translation: Modify group chat name
      ///
      /// Key: 修改群聊名称
      ///
      /// Locales: en
      var 修改群聊名称: RswiftResources.StringResource { .init(key: "修改群聊名称", tableName: "Localizable", source: source, developmentValue: "Modify group chat name", comment: nil) }

      /// en translation: After modifying the group chat name, other members will be notified in the group.
      ///
      /// Key: 修改群聊名称后，将在群内通知其他成员。
      ///
      /// Locales: en
      var 修改群聊名称后将在群内通知其他成员: RswiftResources.StringResource { .init(key: "修改群聊名称后，将在群内通知其他成员。", tableName: "Localizable", source: source, developmentValue: "After modifying the group chat name, other members will be notified in the group.", comment: nil) }

      /// en translation: Group entry application
      ///
      /// Key: 入群申请
      ///
      /// Locales: en
      var 入群申请: RswiftResources.StringResource { .init(key: "入群申请", tableName: "Localizable", source: source, developmentValue: "Group entry application", comment: nil) }

      /// en translation: About Wecyn
      ///
      /// Key: 关于Wecyn
      ///
      /// Locales: en
      var 关于Wecyn: RswiftResources.StringResource { .init(key: "关于Wecyn", tableName: "Localizable", source: source, developmentValue: "About Wecyn", comment: nil) }

      /// en translation: about us
      ///
      /// Key: 关于我们
      ///
      /// Locales: en
      var 关于我们: RswiftResources.StringResource { .init(key: "关于我们", tableName: "Localizable", source: source, developmentValue: "about us", comment: nil) }

      /// en translation: Interests
      ///
      /// Key: 兴趣爱好
      ///
      /// Locales: en
      var 兴趣爱好: RswiftResources.StringResource { .init(key: "兴趣爱好", tableName: "Localizable", source: source, developmentValue: "Interests", comment: nil) }

      /// en translation: Share
      ///
      /// Key: 分享
      ///
      /// Locales: en
      var 分享: RswiftResources.StringResource { .init(key: "分享", tableName: "Localizable", source: source, developmentValue: "Share", comment: nil) }

      /// en translation: SHARING
      ///
      /// Key: 分享名片
      ///
      /// Locales: en
      var 分享名片: RswiftResources.StringResource { .init(key: "分享名片", tableName: "Localizable", source: source, developmentValue: "SHARING", comment: nil) }

      /// en translation: minutes
      ///
      /// Key: 分钟
      ///
      /// Locales: en
      var 分钟: RswiftResources.StringResource { .init(key: "分钟", tableName: "Localizable", source: source, developmentValue: "minutes", comment: nil) }

      /// en translation: a moment ago
      ///
      /// Key: 刚刚
      ///
      /// Locales: en
      var 刚刚: RswiftResources.StringResource { .init(key: "刚刚", tableName: "Localizable", source: source, developmentValue: "a moment ago", comment: nil) }

      /// en translation: created the chat
      ///
      /// Key: 创建了群聊
      ///
      /// Locales: en
      var 创建了群聊: RswiftResources.StringResource { .init(key: "创建了群聊", tableName: "Localizable", source: source, developmentValue: "created the chat", comment: nil) }

      /// en translation: Create and join group chat
      ///
      /// Key: 创建和加入群聊
      ///
      /// Locales: en
      var 创建和加入群聊: RswiftResources.StringResource { .init(key: "创建和加入群聊", tableName: "Localizable", source: source, developmentValue: "Create and join group chat", comment: nil) }

      /// en translation: Create Work Group
      ///
      /// Key: 创建工作群
      ///
      /// Locales: en
      var 创建工作群: RswiftResources.StringResource { .init(key: "创建工作群", tableName: "Localizable", source: source, developmentValue: "Create Work Group", comment: nil) }

      /// en translation: Group chat created
      ///
      /// Key: 创建的群聊
      ///
      /// Locales: en
      var 创建的群聊: RswiftResources.StringResource { .init(key: "创建的群聊", tableName: "Localizable", source: source, developmentValue: "Group chat created", comment: nil) }

      /// en translation: Group created
      ///
      /// Key: 创建群组成功
      ///
      /// Locales: en
      var 创建群组成功: RswiftResources.StringResource { .init(key: "创建群组成功", tableName: "Localizable", source: source, developmentValue: "Group created", comment: nil) }

      /// en translation: Create a group chat
      ///
      /// Key: 创建群聊
      ///
      /// Locales: en
      var 创建群聊: RswiftResources.StringResource { .init(key: "创建群聊", tableName: "Localizable", source: source, developmentValue: "Create a group chat", comment: nil) }

      /// en translation: Create a group chat, full use of OpenIM
      ///
      /// Key: 创建群聊，全面使用OpenIM
      ///
      /// Locales: en
      var 创建群聊全面使用OpenIM: RswiftResources.StringResource { .init(key: "创建群聊，全面使用OpenIM", tableName: "Localizable", source: source, developmentValue: "Create a group chat, full use of OpenIM", comment: nil) }

      /// en translation: Delete
      ///
      /// Key: 删除
      ///
      /// Locales: en
      var 删除: RswiftResources.StringResource { .init(key: "删除", tableName: "Localizable", source: source, developmentValue: "Delete", comment: nil) }

      /// en translation: joined the chat
      ///
      /// Key: 加入群聊
      ///
      /// Locales: en
      var 加入群聊: RswiftResources.StringResource { .init(key: "加入群聊", tableName: "Localizable", source: source, developmentValue: "joined the chat", comment: nil) }

      /// en translation: joined this group
      ///
      /// Key: 加入该群聊
      ///
      /// Locales: en
      var 加入该群聊: RswiftResources.StringResource { .init(key: "加入该群聊", tableName: "Localizable", source: source, developmentValue: "joined this group", comment: nil) }

      /// en translation: Blocked
      ///
      /// Key: 加入黑名单
      ///
      /// Locales: en
      var 加入黑名单: RswiftResources.StringResource { .init(key: "加入黑名单", tableName: "Localizable", source: source, developmentValue: "Blocked", comment: nil) }

      /// en translation: Add Friends
      ///
      /// Key: 加好友
      ///
      /// Locales: en
      var 加好友: RswiftResources.StringResource { .init(key: "加好友", tableName: "Localizable", source: source, developmentValue: "Add Friends", comment: nil) }

      /// en translation: Request sent
      ///
      /// Key: 加好友请求已发送
      ///
      /// Locales: en
      var 加好友请求已发送: RswiftResources.StringResource { .init(key: "加好友请求已发送", tableName: "Localizable", source: source, developmentValue: "Request sent", comment: nil) }

      /// en translation: Request sent
      ///
      /// Key: 加群申请已发送
      ///
      /// Locales: en
      var 加群申请已发送: RswiftResources.StringResource { .init(key: "加群申请已发送", tableName: "Localizable", source: source, developmentValue: "Request sent", comment: nil) }

      /// en translation: ToDo
      ///
      /// Key: 去处理
      ///
      /// Locales: en
      var 去处理: RswiftResources.StringResource { .init(key: "去处理", tableName: "Localizable", source: source, developmentValue: "ToDo", comment: nil) }

      /// en translation: Please refer to the commercial version
      ///
      /// Key: 参考商业版本
      ///
      /// Locales: en
      var 参考商业版本: RswiftResources.StringResource { .init(key: "参考商业版本", tableName: "Localizable", source: source, developmentValue: "Please refer to the commercial version", comment: nil) }

      /// en translation: Publish
      ///
      /// Key: 发布
      ///
      /// Locales: en
      var 发布: RswiftResources.StringResource { .init(key: "发布", tableName: "Localizable", source: source, developmentValue: "Publish", comment: nil) }

      /// en translation: Send Msg
      ///
      /// Key: 发消息
      ///
      /// Locales: en
      var 发消息: RswiftResources.StringResource { .init(key: "发消息", tableName: "Localizable", source: source, developmentValue: "Send Msg", comment: nil) }

      /// en translation: Create a chat
      ///
      /// Key: 发起群聊
      ///
      /// Locales: en
      var 发起群聊: RswiftResources.StringResource { .init(key: "发起群聊", tableName: "Localizable", source: source, developmentValue: "Create a chat", comment: nil) }

      /// en translation: Send
      ///
      /// Key: 发送
      ///
      /// Locales: en
      var 发送: RswiftResources.StringResource { .init(key: "发送", tableName: "Localizable", source: source, developmentValue: "Send", comment: nil) }

      /// en translation: Send to
      ///
      /// Key: 发送给
      ///
      /// Locales: en
      var 发送给: RswiftResources.StringResource { .init(key: "发送给", tableName: "Localizable", source: source, developmentValue: "Send to", comment: nil) }

      /// en translation: Cancel
      ///
      /// Key: 取消
      ///
      /// Locales: en
      var 取消: RswiftResources.StringResource { .init(key: "取消", tableName: "Localizable", source: source, developmentValue: "Cancel", comment: nil) }

      /// en translation: UnPin
      ///
      /// Key: 取消置顶
      ///
      /// Locales: en
      var 取消置顶: RswiftResources.StringResource { .init(key: "取消置顶", tableName: "Localizable", source: source, developmentValue: "UnPin", comment: nil) }

      /// en translation: Only group administer can modify
      ///
      /// Key: 只有群主可以修改
      ///
      /// Locales: en
      var 只有群主可以修改: RswiftResources.StringResource { .init(key: "只有群主可以修改", tableName: "Localizable", source: source, developmentValue: "Only group administer can modify", comment: nil) }

      /// en translation: Agree
      ///
      /// Key: 同意
      ///
      /// Locales: en
      var 同意: RswiftResources.StringResource { .init(key: "同意", tableName: "Localizable", source: source, developmentValue: "Agree", comment: nil) }

      /// en translation: Reply
      ///
      /// Key: 回复
      ///
      /// Locales: en
      var 回复: RswiftResources.StringResource { .init(key: "回复", tableName: "Localizable", source: source, developmentValue: "Reply", comment: nil) }

      /// en translation: Remark
      ///
      /// Key: 备注
      ///
      /// Locales: en
      var 备注: RswiftResources.StringResource { .init(key: "备注", tableName: "Localizable", source: source, developmentValue: "Remark", comment: nil) }

      /// en translation: Copy
      ///
      /// Key: 复制
      ///
      /// Locales: en
      var 复制: RswiftResources.StringResource { .init(key: "复制", tableName: "Localizable", source: source, developmentValue: "Copy", comment: nil) }

      /// en translation: Multi-select
      ///
      /// Key: 多选
      ///
      /// Locales: en
      var 多选: RswiftResources.StringResource { .init(key: "多选", tableName: "Localizable", source: source, developmentValue: "Multi-select", comment: nil) }

      /// en translation: day
      ///
      /// Key: 天
      ///
      /// Locales: en
      var 天: RswiftResources.StringResource { .init(key: "天", tableName: "Localizable", source: source, developmentValue: "day", comment: nil) }

      /// en translation: avatar
      ///
      /// Key: 头像
      ///
      /// Locales: en
      var 头像: RswiftResources.StringResource { .init(key: "头像", tableName: "Localizable", source: source, developmentValue: "avatar", comment: nil) }

      /// en translation: Avatar uploaded
      ///
      /// Key: 头像上传成功
      ///
      /// Locales: en
      var 头像上传成功: RswiftResources.StringResource { .init(key: "头像上传成功", tableName: "Localizable", source: source, developmentValue: "Avatar uploaded", comment: nil) }

      /// en translation: female
      ///
      /// Key: 女
      ///
      /// Locales: en
      var 女: RswiftResources.StringResource { .init(key: "女", tableName: "Localizable", source: source, developmentValue: "female", comment: nil) }

      /// en translation: Name
      ///
      /// Key: 姓名
      ///
      /// Locales: en
      var 姓名: RswiftResources.StringResource { .init(key: "姓名", tableName: "Localizable", source: source, developmentValue: "Name", comment: nil) }

      /// en translation: Locate the chat location
      ///
      /// Key: 定位到聊天位置
      ///
      /// Locales: en
      var 定位到聊天位置: RswiftResources.StringResource { .init(key: "定位到聊天位置", tableName: "Localizable", source: source, developmentValue: "Locate the chat location", comment: nil) }

      /// en translation: The other party has turned on friend verification, and you are not his (her) friend yet, please send a friend verification request first, and the other party can only chat after the verification is passed.
      ///
      /// Key: 对方开启了朋友验证，你还不是他（她）朋友，请先发送朋友验证请求，对方验证通过后才能聊天。
      ///
      /// Locales: en
      var 对方开启了朋友验证你还不是他她朋友请先发送朋友验证请求对方验证通过后才能聊天: RswiftResources.StringResource { .init(key: "对方开启了朋友验证，你还不是他（她）朋友，请先发送朋友验证请求，对方验证通过后才能聊天。", tableName: "Localizable", source: source, developmentValue: "The other party has turned on friend verification, and you are not his (her) friend yet, please send a friend verification request first, and the other party can only chat after the verification is passed.", comment: nil) }

      /// en translation: Point your camera at the QR code.
      ///
      /// Key: 将相机对准二维码。
      ///
      /// Locales: en
      var 将相机对准二维码: RswiftResources.StringResource { .init(key: "将相机对准二维码。", tableName: "Localizable", source: source, developmentValue: "Point your camera at the QR code.", comment: nil) }

      /// en translation: hours
      ///
      /// Key: 小时
      ///
      /// Locales: en
      var 小时: RswiftResources.StringResource { .init(key: "小时", tableName: "Localizable", source: source, developmentValue: "hours", comment: nil) }

      /// en translation: Not receive message any more
      ///
      /// Key: 屏蔽群消息
      ///
      /// Locales: en
      var 屏蔽群消息: RswiftResources.StringResource { .init(key: "屏蔽群消息", tableName: "Localizable", source: source, developmentValue: "Not receive message any more", comment: nil) }

      /// en translation: WORK CARD
      ///
      /// Key: 工作名片
      ///
      /// Locales: en
      var 工作名片: RswiftResources.StringResource { .init(key: "工作名片", tableName: "Localizable", source: source, developmentValue: "WORK CARD", comment: nil) }

      /// en translation: Experience
      ///
      /// Key: 工作经历
      ///
      /// Locales: en
      var 工作经历: RswiftResources.StringResource { .init(key: "工作经历", tableName: "Localizable", source: source, developmentValue: "Experience", comment: nil) }

      /// en translation: Work Group
      ///
      /// Key: 工作群
      ///
      /// Locales: en
      var 工作群: RswiftResources.StringResource { .init(key: "工作群", tableName: "Localizable", source: source, developmentValue: "Work Group", comment: nil) }

      /// en translation: joined the group
      ///
      /// Key: 已加入群聊
      ///
      /// Locales: en
      var 已加入群聊: RswiftResources.StringResource { .init(key: "已加入群聊", tableName: "Localizable", source: source, developmentValue: "joined the group", comment: nil) }

      /// en translation: Agreed
      ///
      /// Key: 已同意
      ///
      /// Locales: en
      var 已同意: RswiftResources.StringResource { .init(key: "已同意", tableName: "Localizable", source: source, developmentValue: "Agreed", comment: nil) }

      /// en translation: Rejected
      ///
      /// Key: 已拒绝
      ///
      /// Locales: en
      var 已拒绝: RswiftResources.StringResource { .init(key: "已拒绝", tableName: "Localizable", source: source, developmentValue: "Rejected", comment: nil) }

      /// en translation: has been 
      ///
      /// Key: 已被
      ///
      /// Locales: en
      var 已被: RswiftResources.StringResource { .init(key: "已被", tableName: "Localizable", source: source, developmentValue: "has been ", comment: nil) }

      /// en translation: Readed
      ///
      /// Key: 已读
      ///
      /// Locales: en
      var 已读: RswiftResources.StringResource { .init(key: "已读", tableName: "Localizable", source: source, developmentValue: "Readed", comment: nil) }

      /// en translation: have already quit the group
      ///
      /// Key: 已退出群聊
      ///
      /// Locales: en
      var 已退出群聊: RswiftResources.StringResource { .init(key: "已退出群聊", tableName: "Localizable", source: source, developmentValue: "have already quit the group", comment: nil) }

      /// en translation: Selected:
      ///
      /// Key: 已选择：
      ///
      /// Locales: en
      var 已选择: RswiftResources.StringResource { .init(key: "已选择：", tableName: "Localizable", source: source, developmentValue: "Selected:", comment: nil) }

      /// en translation: Post
      ///
      /// Key: 帖子
      ///
      /// Locales: en
      var 帖子: RswiftResources.StringResource { .init(key: "帖子", tableName: "Localizable", source: source, developmentValue: "Post", comment: nil) }

      /// en translation: Top contacts
      ///
      /// Key: 常用联系人
      ///
      /// Locales: en
      var 常用联系人: RswiftResources.StringResource { .init(key: "常用联系人", tableName: "Localizable", source: source, developmentValue: "Top contacts", comment: nil) }

      /// en translation: gender
      ///
      /// Key: 性别
      ///
      /// Locales: en
      var 性别: RswiftResources.StringResource { .init(key: "性别", tableName: "Localizable", source: source, developmentValue: "gender", comment: nil) }

      /// en translation: Are you sure you to log out?
      ///
      /// Key: 您确定要退出登录吗？
      ///
      /// Locales: en
      var 您确定要退出登录吗: RswiftResources.StringResource { .init(key: "您确定要退出登录吗？", tableName: "Localizable", source: source, developmentValue: "Are you sure you to log out?", comment: nil) }

      /// en translation: Created by myself
      ///
      /// Key: 我创建的
      ///
      /// Locales: en
      var 我创建的: RswiftResources.StringResource { .init(key: "我创建的", tableName: "Localizable", source: source, developmentValue: "Created by myself", comment: nil) }

      /// en translation: Joined
      ///
      /// Key: 我加入的
      ///
      /// Locales: en
      var 我加入的: RswiftResources.StringResource { .init(key: "我加入的", tableName: "Localizable", source: source, developmentValue: "Joined", comment: nil) }

      /// en translation: my nickname in the chat
      ///
      /// Key: 我在群里的昵称
      ///
      /// Locales: en
      var 我在群里的昵称: RswiftResources.StringResource { .init(key: "我在群里的昵称", tableName: "Localizable", source: source, developmentValue: "my nickname in the chat", comment: nil) }

      /// en translation: my info
      ///
      /// Key: 我的信息
      ///
      /// Locales: en
      var 我的信息: RswiftResources.StringResource { .init(key: "我的信息", tableName: "Localizable", source: source, developmentValue: "my info", comment: nil) }

      /// en translation: Cards
      ///
      /// Key: 我的名片
      ///
      /// Locales: en
      var 我的名片: RswiftResources.StringResource { .init(key: "我的名片", tableName: "Localizable", source: source, developmentValue: "Cards", comment: nil) }

      /// en translation: My friends
      ///
      /// Key: 我的好友
      ///
      /// Locales: en
      var 我的好友: RswiftResources.StringResource { .init(key: "我的好友", tableName: "Localizable", source: source, developmentValue: "My friends", comment: nil) }

      /// en translation: My Groups
      ///
      /// Key: 我的群组
      ///
      /// Locales: en
      var 我的群组: RswiftResources.StringResource { .init(key: "我的群组", tableName: "Localizable", source: source, developmentValue: "My Groups", comment: nil) }

      /// en translation: I passed your friend verification request and now we can start chatting
      ///
      /// Key: 我通过了您的好友验证请求，现在我们可以开始聊天了
      ///
      /// Locales: en
      var 我通过了您的好友验证请求现在我们可以开始聊天了: RswiftResources.StringResource { .init(key: "我通过了您的好友验证请求，现在我们可以开始聊天了", tableName: "Localizable", source: source, developmentValue: "I passed your friend verification request and now we can start chatting", comment: nil) }

      /// en translation: Phone number
      ///
      /// Key: 手机号码
      ///
      /// Locales: en
      var 手机号码: RswiftResources.StringResource { .init(key: "手机号码", tableName: "Localizable", source: source, developmentValue: "Phone number", comment: nil) }

      /// en translation: phone on line
      ///
      /// Key: 手机在线
      ///
      /// Locales: en
      var 手机在线: RswiftResources.StringResource { .init(key: "手机在线", tableName: "Localizable", source: source, developmentValue: "phone on line", comment: nil) }

      /// en translation: say hello
      ///
      /// Key: 打招呼
      ///
      /// Locales: en
      var 打招呼: RswiftResources.StringResource { .init(key: "打招呼", tableName: "Localizable", source: source, developmentValue: "say hello", comment: nil) }

      /// en translation: Scan
      ///
      /// Key: 扫一扫
      ///
      /// Locales: en
      var 扫一扫: RswiftResources.StringResource { .init(key: "扫一扫", tableName: "Localizable", source: source, developmentValue: "Scan", comment: nil) }

      /// en translation: scan to join in
      ///
      /// Key: 扫一扫群二维码，立刻加入该群。
      ///
      /// Locales: en
      var 扫一扫群二维码立刻加入该群: RswiftResources.StringResource { .init(key: "扫一扫群二维码，立刻加入该群。", tableName: "Localizable", source: source, developmentValue: "scan to join in", comment: nil) }

      /// en translation: Scan QR code business card
      ///
      /// Key: 扫描二维码名片
      ///
      /// Locales: en
      var 扫描二维码名片: RswiftResources.StringResource { .init(key: "扫描二维码名片", tableName: "Localizable", source: source, developmentValue: "Scan QR code business card", comment: nil) }

      /// en translation: Recommend
      ///
      /// Key: 把他推荐给朋友
      ///
      /// Locales: en
      var 把他推荐给朋友: RswiftResources.StringResource { .init(key: "把他推荐给朋友", tableName: "Localizable", source: source, developmentValue: "Recommend", comment: nil) }

      /// en translation: complaint
      ///
      /// Key: 投诉
      ///
      /// Locales: en
      var 投诉: RswiftResources.StringResource { .init(key: "投诉", tableName: "Localizable", source: source, developmentValue: "complaint", comment: nil) }

      /// en translation: Camera
      ///
      /// Key: 拍摄
      ///
      /// Locales: en
      var 拍摄: RswiftResources.StringResource { .init(key: "拍摄", tableName: "Localizable", source: source, developmentValue: "Camera", comment: nil) }

      /// en translation: Reject
      ///
      /// Key: 拒绝
      ///
      /// Locales: en
      var 拒绝: RswiftResources.StringResource { .init(key: "拒绝", tableName: "Localizable", source: source, developmentValue: "Reject", comment: nil) }

      /// en translation: Press to speak
      ///
      /// Key: 按住开始说话
      ///
      /// Locales: en
      var 按住开始说话: RswiftResources.StringResource { .init(key: "按住开始说话", tableName: "Localizable", source: source, developmentValue: "Press to speak", comment: nil) }

      /// en translation: Hold to talk
      ///
      /// Key: 按住说话
      ///
      /// Locales: en
      var 按住说话: RswiftResources.StringResource { .init(key: "按住说话", tableName: "Localizable", source: source, developmentValue: "Hold to talk", comment: nil) }

      /// en translation: accept
      ///
      /// Key: 接受
      ///
      /// Locales: en
      var 接受: RswiftResources.StringResource { .init(key: "接受", tableName: "Localizable", source: source, developmentValue: "accept", comment: nil) }

      /// en translation: Receive message but not notify
      ///
      /// Key: 接收消息但不提示
      ///
      /// Locales: en
      var 接收消息但不提示: RswiftResources.StringResource { .init(key: "接收消息但不提示", tableName: "Localizable", source: source, developmentValue: "Receive message but not notify", comment: nil) }

      /// en translation: Notify
      ///
      /// Key: 提示
      ///
      /// Locales: en
      var 提示: RswiftResources.StringResource { .init(key: "提示", tableName: "Localizable", source: source, developmentValue: "Notify", comment: nil) }

      /// en translation: Alert
      ///
      /// Key: 提醒
      ///
      /// Locales: en
      var 提醒: RswiftResources.StringResource { .init(key: "提醒", tableName: "Localizable", source: source, developmentValue: "Alert", comment: nil) }

      /// en translation: Search
      ///
      /// Key: 搜索
      ///
      /// Locales: en
      var 搜索: RswiftResources.StringResource { .init(key: "搜索", tableName: "Localizable", source: source, developmentValue: "Search", comment: nil) }

      /// en translation: Search friends
      ///
      /// Key: 搜索好友
      ///
      /// Locales: en
      var 搜索好友: RswiftResources.StringResource { .init(key: "搜索好友", tableName: "Localizable", source: source, developmentValue: "Search friends", comment: nil) }

      /// en translation: search members
      ///
      /// Key: 搜索成员
      ///
      /// Locales: en
      var 搜索成员: RswiftResources.StringResource { .init(key: "搜索成员", tableName: "Localizable", source: source, developmentValue: "search members", comment: nil) }

      /// en translation: Search for specified content
      ///
      /// Key: 搜索指定内容
      ///
      /// Locales: en
      var 搜索指定内容: RswiftResources.StringResource { .init(key: "搜索指定内容", tableName: "Localizable", source: source, developmentValue: "Search for specified content", comment: nil) }

      /// en translation: Revoke
      ///
      /// Key: 撤回
      ///
      /// Locales: en
      var 撤回: RswiftResources.StringResource { .init(key: "撤回", tableName: "Localizable", source: source, developmentValue: "Revoke", comment: nil) }

      /// en translation: revoked a message
      ///
      /// Key: 撤回了一条消息
      ///
      /// Locales: en
      var 撤回了一条消息: RswiftResources.StringResource { .init(key: "撤回了一条消息", tableName: "Localizable", source: source, developmentValue: "revoked a message", comment: nil) }

      /// en translation: Education
      ///
      /// Key: 教育经历
      ///
      /// Locales: en
      var 教育经历: RswiftResources.StringResource { .init(key: "教育经历", tableName: "Localizable", source: source, developmentValue: "Education", comment: nil) }

      /// en translation: File Transfer Assistant
      ///
      /// Key: 文件传输助手
      ///
      /// Locales: en
      var 文件传输助手: RswiftResources.StringResource { .init(key: "文件传输助手", tableName: "Localizable", source: source, developmentValue: "File Transfer Assistant", comment: nil) }

      /// en translation: new notification
      ///
      /// Key: 新消息通知
      ///
      /// Locales: en
      var 新消息通知: RswiftResources.StringResource { .init(key: "新消息通知", tableName: "Localizable", source: source, developmentValue: "new notification", comment: nil) }

      /// en translation: New friends
      ///
      /// Key: 新的好友
      ///
      /// Locales: en
      var 新的好友: RswiftResources.StringResource { .init(key: "新的好友", tableName: "Localizable", source: source, developmentValue: "New friends", comment: nil) }

      /// en translation: New friend request
      ///
      /// Key: 新的好友请求
      ///
      /// Locales: en
      var 新的好友请求: RswiftResources.StringResource { .init(key: "新的好友请求", tableName: "Localizable", source: source, developmentValue: "New friend request", comment: nil) }

      /// en translation: Can not find the 
      ///
      /// Key: 无法找到该
      ///
      /// Locales: en
      var 无法找到该: RswiftResources.StringResource { .init(key: "无法找到该", tableName: "Localizable", source: source, developmentValue: "Can not find the ", comment: nil) }

      /// en translation: Calendar
      ///
      /// Key: 日历
      ///
      /// Locales: en
      var 日历: RswiftResources.StringResource { .init(key: "日历", tableName: "Localizable", source: source, developmentValue: "Calendar", comment: nil) }

      /// en translation: Schedule
      ///
      /// Key: 日程
      ///
      /// Locales: en
      var 日程: RswiftResources.StringResource { .init(key: "日程", tableName: "Localizable", source: source, developmentValue: "Schedule", comment: nil) }

      /// en translation: TimeZone
      ///
      /// Key: 时区
      ///
      /// Locales: en
      var 时区: RswiftResources.StringResource { .init(key: "时区", tableName: "Localizable", source: source, developmentValue: "TimeZone", comment: nil) }

      /// en translation: Monday
      ///
      /// Key: 星期一
      ///
      /// Locales: en
      var 星期一: RswiftResources.StringResource { .init(key: "星期一", tableName: "Localizable", source: source, developmentValue: "Monday", comment: nil) }

      /// en translation: Wednesday
      ///
      /// Key: 星期三
      ///
      /// Locales: en
      var 星期三: RswiftResources.StringResource { .init(key: "星期三", tableName: "Localizable", source: source, developmentValue: "Wednesday", comment: nil) }

      /// en translation: Tuesday
      ///
      /// Key: 星期二
      ///
      /// Locales: en
      var 星期二: RswiftResources.StringResource { .init(key: "星期二", tableName: "Localizable", source: source, developmentValue: "Tuesday", comment: nil) }

      /// en translation: Friday
      ///
      /// Key: 星期五
      ///
      /// Locales: en
      var 星期五: RswiftResources.StringResource { .init(key: "星期五", tableName: "Localizable", source: source, developmentValue: "Friday", comment: nil) }

      /// en translation: Saturday
      ///
      /// Key: 星期六
      ///
      /// Locales: en
      var 星期六: RswiftResources.StringResource { .init(key: "星期六", tableName: "Localizable", source: source, developmentValue: "Saturday", comment: nil) }

      /// en translation: Thursday
      ///
      /// Key: 星期四
      ///
      /// Locales: en
      var 星期四: RswiftResources.StringResource { .init(key: "星期四", tableName: "Localizable", source: source, developmentValue: "Thursday", comment: nil) }

      /// en translation: Sunday
      ///
      /// Key: 星期日
      ///
      /// Locales: en
      var 星期日: RswiftResources.StringResource { .init(key: "星期日", tableName: "Localizable", source: source, developmentValue: "Sunday", comment: nil) }

      /// en translation: Yesterday
      ///
      /// Key: 昨天
      ///
      /// Locales: en
      var 昨天: RswiftResources.StringResource { .init(key: "昨天", tableName: "Localizable", source: source, developmentValue: "Yesterday", comment: nil) }

      /// en translation: nickname
      ///
      /// Key: 昵称
      ///
      /// Locales: en
      var 昵称: RswiftResources.StringResource { .init(key: "昵称", tableName: "Localizable", source: source, developmentValue: "nickname", comment: nil) }

      /// en translation: After the nickname is modified, it will only be displayed in this group, and all members of the group can see it
      ///
      /// Key: 昵称修改后，只会在此群内显示，群内成员都可以看见
      ///
      /// Locales: en
      var 昵称修改后只会在此群内显示群内成员都可以看见: RswiftResources.StringResource { .init(key: "昵称修改后，只会在此群内显示，群内成员都可以看见", tableName: "Localizable", source: source, developmentValue: "After the nickname is modified, it will only be displayed in this group, and all members of the group can see it", comment: nil) }

      /// en translation: Normal Group
      ///
      /// Key: 普通群
      ///
      /// Locales: en
      var 普通群: RswiftResources.StringResource { .init(key: "普通群", tableName: "Localizable", source: source, developmentValue: "Normal Group", comment: nil) }

      /// en translation: More Info
      ///
      /// Key: 更多资料
      ///
      /// Locales: en
      var 更多资料: RswiftResources.StringResource { .init(key: "更多资料", tableName: "Localizable", source: source, developmentValue: "More Info", comment: nil) }

      /// en translation: updated the group info
      ///
      /// Key: 更新了群信息
      ///
      /// Locales: en
      var 更新了群信息: RswiftResources.StringResource { .init(key: "更新了群信息", tableName: "Localizable", source: source, developmentValue: "updated the group info", comment: nil) }

      /// en translation: Activity
      ///
      /// Key: 最近发布
      ///
      /// Locales: en
      var 最近发布: RswiftResources.StringResource { .init(key: "最近发布", tableName: "Localizable", source: source, developmentValue: "Activity", comment: nil) }

      /// en translation: Month
      ///
      /// Key: 月
      ///
      /// Locales: en
      var 月: RswiftResources.StringResource { .init(key: "月", tableName: "Localizable", source: source, developmentValue: "Month", comment: nil) }

      /// en translation: Unread
      ///
      /// Key: 未读
      ///
      /// Locales: en
      var 未读: RswiftResources.StringResource { .init(key: "未读", tableName: "Localizable", source: source, developmentValue: "Unread", comment: nil) }

      /// en translation: this week
      ///
      /// Key: 本周
      ///
      /// Locales: en
      var 本周: RswiftResources.StringResource { .init(key: "本周", tableName: "Localizable", source: source, developmentValue: "this week", comment: nil) }

      /// en translation: this month
      ///
      /// Key: 本月
      ///
      /// Locales: en
      var 本月: RswiftResources.StringResource { .init(key: "本月", tableName: "Localizable", source: source, developmentValue: "this month", comment: nil) }

      /// en translation: Join source:
      ///
      /// Key: 来源：
      ///
      /// Locales: en
      var 来源: RswiftResources.StringResource { .init(key: "来源：", tableName: "Localizable", source: source, developmentValue: "Join source:", comment: nil) }

      /// en translation: Release to cancel
      ///
      /// Key: 松开取消
      ///
      /// Locales: en
      var 松开取消: RswiftResources.StringResource { .init(key: "松开取消", tableName: "Localizable", source: source, developmentValue: "Release to cancel", comment: nil) }

      /// en translation: release to refresh
      ///
      /// Key: 松手刷新
      ///
      /// Locales: en
      var 松手刷新: RswiftResources.StringResource { .init(key: "松手刷新", tableName: "Localizable", source: source, developmentValue: "release to refresh", comment: nil) }

      /// en translation: Search Chat History
      ///
      /// Key: 查找聊天内容
      ///
      /// Locales: en
      var 查找聊天内容: RswiftResources.StringResource { .init(key: "查找聊天内容", tableName: "Localizable", source: source, developmentValue: "Search Chat History", comment: nil) }

      /// en translation: find record of chat
      ///
      /// Key: 查找聊天记录
      ///
      /// Locales: en
      var 查找聊天记录: RswiftResources.StringResource { .init(key: "查找聊天记录", tableName: "Localizable", source: source, developmentValue: "find record of chat", comment: nil) }

      /// en translation: view chat records
      ///
      /// Key: 查看聊天记录
      ///
      /// Locales: en
      var 查看聊天记录: RswiftResources.StringResource { .init(key: "查看聊天记录", tableName: "Localizable", source: source, developmentValue: "view chat records", comment: nil) }

      /// en translation: Mark as read
      ///
      /// Key: 标为已读
      ///
      /// Locales: en
      var 标为已读: RswiftResources.StringResource { .init(key: "标为已读", tableName: "Localizable", source: source, developmentValue: "Mark as read", comment: nil) }

      /// en translation: Mark as unread
      ///
      /// Key: 标为未读
      ///
      /// Locales: en
      var 标为未读: RswiftResources.StringResource { .init(key: "标为未读", tableName: "Localizable", source: source, developmentValue: "Mark as unread", comment: nil) }

      /// en translation: Speaking
      ///
      /// Key: 正在说话
      ///
      /// Locales: en
      var 正在说话: RswiftResources.StringResource { .init(key: "正在说话", tableName: "Localizable", source: source, developmentValue: "Speaking", comment: nil) }

      /// en translation: Mute Notifications
      ///
      /// Key: 消息免打扰
      ///
      /// Locales: en
      var 消息免打扰: RswiftResources.StringResource { .init(key: "消息免打扰", tableName: "Localizable", source: source, developmentValue: "Mute Notifications", comment: nil) }

      /// en translation: The message was sent, but was rejected by the other party.
      ///
      /// Key: 消息已发出，但被对方拒收了
      ///
      /// Locales: en
      var 消息已发出但被对方拒收了: RswiftResources.StringResource { .init(key: "消息已发出，但被对方拒收了", tableName: "Localizable", source: source, developmentValue: "The message was sent, but was rejected by the other party.", comment: nil) }

      /// en translation: Add
      ///
      /// Key: 添加
      ///
      /// Locales: en
      var 添加: RswiftResources.StringResource { .init(key: "添加", tableName: "Localizable", source: source, developmentValue: "Add", comment: nil) }

      /// en translation: Add to address book
      ///
      /// Key: 添加到通讯录
      ///
      /// Locales: en
      var 添加到通讯录: RswiftResources.StringResource { .init(key: "添加到通讯录", tableName: "Localizable", source: source, developmentValue: "Add to address book", comment: nil) }

      /// en translation: Add Friends
      ///
      /// Key: 添加好友
      ///
      /// Locales: en
      var 添加好友: RswiftResources.StringResource { .init(key: "添加好友", tableName: "Localizable", source: source, developmentValue: "Add Friends", comment: nil) }

      /// en translation: Friend request sent.
      ///
      /// Key: 添加好友请求已发送
      ///
      /// Locales: en
      var 添加好友请求已发送: RswiftResources.StringResource { .init(key: "添加好友请求已发送", tableName: "Localizable", source: source, developmentValue: "Friend request sent.", comment: nil) }

      /// en translation: add_new_section
      ///
      /// Key: 添加新分区
      ///
      /// Locales: en
      var 添加新分区: RswiftResources.StringResource { .init(key: "添加新分区", tableName: "Localizable", source: source, developmentValue: "add_new_section", comment: nil) }

      /// en translation: Add group chat
      ///
      /// Key: 添加群聊
      ///
      /// Locales: en
      var 添加群聊: RswiftResources.StringResource { .init(key: "添加群聊", tableName: "Localizable", source: source, developmentValue: "Add group chat", comment: nil) }

      /// en translation: clear success
      ///
      /// Key: 清空成功
      ///
      /// Locales: en
      var 清空成功: RswiftResources.StringResource { .init(key: "清空成功", tableName: "Localizable", source: source, developmentValue: "clear success", comment: nil) }

      /// en translation: Clear Chat History
      ///
      /// Key: 清空聊天记录
      ///
      /// Locales: en
      var 清空聊天记录: RswiftResources.StringResource { .init(key: "清空聊天记录", tableName: "Localizable", source: source, developmentValue: "Clear Chat History", comment: nil) }

      /// en translation: Version
      ///
      /// Key: 版本号
      ///
      /// Locales: en
      var 版本号: RswiftResources.StringResource { .init(key: "版本号", tableName: "Localizable", source: source, developmentValue: "Version", comment: nil) }

      /// en translation: birthday
      ///
      /// Key: 生日
      ///
      /// Locales: en
      var 生日: RswiftResources.StringResource { .init(key: "生日", tableName: "Localizable", source: source, developmentValue: "birthday", comment: nil) }

      /// en translation: User
      ///
      /// Key: 用户
      ///
      /// Locales: en
      var 用户: RswiftResources.StringResource { .init(key: "用户", tableName: "Localizable", source: source, developmentValue: "User", comment: nil) }

      /// en translation: Request to:
      ///
      /// Key: 申请加入
      ///
      /// Locales: en
      var 申请加入: RswiftResources.StringResource { .init(key: "申请加入", tableName: "Localizable", source: source, developmentValue: "Request to:", comment: nil) }

      /// en translation: Join in
      ///
      /// Key: 申请加入群聊
      ///
      /// Locales: en
      var 申请加入群聊: RswiftResources.StringResource { .init(key: "申请加入群聊", tableName: "Localizable", source: source, developmentValue: "Join in", comment: nil) }

      /// en translation: Descreption:
      ///
      /// Key: 申请描述：
      ///
      /// Locales: en
      var 申请描述: RswiftResources.StringResource { .init(key: "申请描述：", tableName: "Localizable", source: source, developmentValue: "Descreption:", comment: nil) }

      /// en translation: Apply to add friends
      ///
      /// Key: 申请添加朋友
      ///
      /// Locales: en
      var 申请添加朋友: RswiftResources.StringResource { .init(key: "申请添加朋友", tableName: "Localizable", source: source, developmentValue: "Apply to add friends", comment: nil) }

      /// en translation: Reasons for application
      ///
      /// Key: 申请理由
      ///
      /// Locales: en
      var 申请理由: RswiftResources.StringResource { .init(key: "申请理由", tableName: "Localizable", source: source, developmentValue: "Reasons for application", comment: nil) }

      /// en translation: male
      ///
      /// Key: 男
      ///
      /// Locales: en
      var 男: RswiftResources.StringResource { .init(key: "男", tableName: "Localizable", source: source, developmentValue: "male", comment: nil) }

      /// en translation: Include a message(optional)
      ///
      /// Key: 留言（可选）
      ///
      /// Locales: en
      var 留言可选: RswiftResources.StringResource { .init(key: "留言（可选）", tableName: "Localizable", source: source, developmentValue: "Include a message(optional)", comment: nil) }

      /// en translation: Logout
      ///
      /// Key: 登出
      ///
      /// Locales: en
      var 登出: RswiftResources.StringResource { .init(key: "登出", tableName: "Localizable", source: source, developmentValue: "Logout", comment: nil) }

      /// en translation: Album
      ///
      /// Key: 相册
      ///
      /// Locales: en
      var 相册: RswiftResources.StringResource { .init(key: "相册", tableName: "Localizable", source: source, developmentValue: "Album", comment: nil) }

      /// en translation: Send SMS Cancel
      ///
      /// Key: 短信发送取消
      ///
      /// Locales: en
      var 短信发送取消: RswiftResources.StringResource { .init(key: "短信发送取消", tableName: "Localizable", source: source, developmentValue: "Send SMS Cancel", comment: nil) }

      /// en translation: SMS failed to send
      ///
      /// Key: 短信发送失败
      ///
      /// Locales: en
      var 短信发送失败: RswiftResources.StringResource { .init(key: "短信发送失败", tableName: "Localizable", source: source, developmentValue: "SMS failed to send", comment: nil) }

      /// en translation: SMS saved
      ///
      /// Key: 短信已保存
      ///
      /// Locales: en
      var 短信已保存: RswiftResources.StringResource { .init(key: "短信已保存", tableName: "Localizable", source: source, developmentValue: "SMS saved", comment: nil) }

      /// en translation: SMS has been sent
      ///
      /// Key: 短信已发送
      ///
      /// Locales: en
      var 短信已发送: RswiftResources.StringResource { .init(key: "短信已发送", tableName: "Localizable", source: source, developmentValue: "SMS has been sent", comment: nil) }

      /// en translation: Confirm
      ///
      /// Key: 确定
      ///
      /// Locales: en
      var 确定: RswiftResources.StringResource { .init(key: "确定", tableName: "Localizable", source: source, developmentValue: "Confirm", comment: nil) }

      /// en translation: Confirm to delete this message?
      ///
      /// Key: 确定删除该条消息？
      ///
      /// Locales: en
      var 确定删除该条消息: RswiftResources.StringResource { .init(key: "确定删除该条消息？", tableName: "Localizable", source: source, developmentValue: "Confirm to delete this message?", comment: nil) }

      /// en translation: Confirm to delete this message?
      ///
      /// Key: 确定撤回该条消息？
      ///
      /// Locales: en
      var 确定撤回该条消息: RswiftResources.StringResource { .init(key: "确定撤回该条消息？", tableName: "Localizable", source: source, developmentValue: "Confirm to delete this message?", comment: nil) }

      /// en translation: confirm
      ///
      /// Key: 确认
      ///
      /// Locales: en
      var 确认: RswiftResources.StringResource { .init(key: "确认", tableName: "Localizable", source: source, developmentValue: "confirm", comment: nil) }

      /// en translation: Are you sure to clear all chat records?
      ///
      /// Key: 确认清空所有聊天记录吗？
      ///
      /// Locales: en
      var 确认清空所有聊天记录吗: RswiftResources.StringResource { .init(key: "确认清空所有聊天记录吗？", tableName: "Localizable", source: source, developmentValue: "Are you sure to clear all chat records?", comment: nil) }

      /// en translation: s
      ///
      /// Key: 秒
      ///
      /// Locales: en
      var 秒: RswiftResources.StringResource { .init(key: "秒", tableName: "Localizable", source: source, developmentValue: "s", comment: nil) }

      /// en translation: delete
      ///
      /// Key: 移除
      ///
      /// Locales: en
      var 移除: RswiftResources.StringResource { .init(key: "移除", tableName: "Localizable", source: source, developmentValue: "delete", comment: nil) }

      /// en translation: Simplified Chinese
      ///
      /// Key: 简体中文
      ///
      /// Locales: en
      var 简体中文: RswiftResources.StringResource { .init(key: "简体中文", tableName: "Localizable", source: source, developmentValue: "Simplified Chinese", comment: nil) }

      /// en translation: All
      ///
      /// Key: 综合
      ///
      /// Locales: en
      var 综合: RswiftResources.StringResource { .init(key: "综合", tableName: "Localizable", source: source, developmentValue: "All", comment: nil) }

      /// en translation: edit
      ///
      /// Key: 编辑
      ///
      /// Locales: en
      var 编辑: RswiftResources.StringResource { .init(key: "编辑", tableName: "Localizable", source: source, developmentValue: "edit", comment: nil) }

      /// en translation: Pin
      ///
      /// Key: 置顶
      ///
      /// Locales: en
      var 置顶: RswiftResources.StringResource { .init(key: "置顶", tableName: "Localizable", source: source, developmentValue: "Pin", comment: nil) }

      /// en translation: Sticky on Top
      ///
      /// Key: 置顶聊天
      ///
      /// Locales: en
      var 置顶聊天: RswiftResources.StringResource { .init(key: "置顶聊天", tableName: "Localizable", source: source, developmentValue: "Sticky on Top", comment: nil) }

      /// en translation: top contact
      ///
      /// Key: 置顶联系人
      ///
      /// Locales: en
      var 置顶联系人: RswiftResources.StringResource { .init(key: "置顶联系人", tableName: "Localizable", source: source, developmentValue: "top contact", comment: nil) }

      /// en translation: group QR code
      ///
      /// Key: 群二维码
      ///
      /// Locales: en
      var 群二维码: RswiftResources.StringResource { .init(key: "群二维码", tableName: "Localizable", source: source, developmentValue: "group QR code", comment: nil) }

      /// en translation: Group announcement
      ///
      /// Key: 群公告
      ///
      /// Locales: en
      var 群公告: RswiftResources.StringResource { .init(key: "群公告", tableName: "Localizable", source: source, developmentValue: "Group announcement", comment: nil) }

      /// en translation: members
      ///
      /// Key: 群成员
      ///
      /// Locales: en
      var 群成员: RswiftResources.StringResource { .init(key: "群成员", tableName: "Localizable", source: source, developmentValue: "members", comment: nil) }

      /// en translation: Group Type
      ///
      /// Key: 群类型
      ///
      /// Locales: en
      var 群类型: RswiftResources.StringResource { .init(key: "群类型", tableName: "Localizable", source: source, developmentValue: "Group Type", comment: nil) }

      /// en translation: Groups
      ///
      /// Key: 群组
      ///
      /// Locales: en
      var 群组: RswiftResources.StringResource { .init(key: "群组", tableName: "Localizable", source: source, developmentValue: "Groups", comment: nil) }

      /// en translation: group chat ID number
      ///
      /// Key: 群聊ID号
      ///
      /// Locales: en
      var 群聊ID号: RswiftResources.StringResource { .init(key: "群聊ID号", tableName: "Localizable", source: source, developmentValue: "group chat ID number", comment: nil) }

      /// en translation: group id copied
      ///
      /// Key: 群聊ID已复制
      ///
      /// Locales: en
      var 群聊ID已复制: RswiftResources.StringResource { .init(key: "群聊ID已复制", tableName: "Localizable", source: source, developmentValue: "group id copied", comment: nil) }

      /// en translation: chat name
      ///
      /// Key: 群聊名称
      ///
      /// Locales: en
      var 群聊名称: RswiftResources.StringResource { .init(key: "群聊名称", tableName: "Localizable", source: source, developmentValue: "chat name", comment: nil) }

      /// en translation: Group chat setting
      ///
      /// Key: 群聊设置
      ///
      /// Locales: en
      var 群聊设置: RswiftResources.StringResource { .init(key: "群聊设置", tableName: "Localizable", source: source, developmentValue: "Group chat setting", comment: nil) }

      /// en translation: Group notification
      ///
      /// Key: 群通知
      ///
      /// Locales: en
      var 群通知: RswiftResources.StringResource { .init(key: "群通知", tableName: "Localizable", source: source, developmentValue: "Group notification", comment: nil) }

      /// en translation: Translate
      ///
      /// Key: 翻译
      ///
      /// Locales: en
      var 翻译: RswiftResources.StringResource { .init(key: "翻译", tableName: "Localizable", source: source, developmentValue: "Translate", comment: nil) }

      /// en translation: set chat top
      ///
      /// Key: 聊天置顶
      ///
      /// Locales: en
      var 聊天置顶: RswiftResources.StringResource { .init(key: "聊天置顶", tableName: "Localizable", source: source, developmentValue: "set chat top", comment: nil) }

      /// en translation: Text
      ///
      /// Key: 聊天记录
      ///
      /// Locales: en
      var 聊天记录: RswiftResources.StringResource { .init(key: "聊天记录", tableName: "Localizable", source: source, developmentValue: "Text", comment: nil) }

      /// en translation: Chat history cleareds
      ///
      /// Key: 聊天记录已清除
      ///
      /// Locales: en
      var 聊天记录已清除: RswiftResources.StringResource { .init(key: "聊天记录已清除", tableName: "Localizable", source: source, developmentValue: "Chat history cleareds", comment: nil) }

      /// en translation: chat setting
      ///
      /// Key: 聊天设置
      ///
      /// Locales: en
      var 聊天设置: RswiftResources.StringResource { .init(key: "聊天设置", tableName: "Localizable", source: source, developmentValue: "chat setting", comment: nil) }

      /// en translation: Friends
      ///
      /// Key: 联系人
      ///
      /// Locales: en
      var 联系人: RswiftResources.StringResource { .init(key: "联系人", tableName: "Localizable", source: source, developmentValue: "Friends", comment: nil) }

      /// en translation: Contact us
      ///
      /// Key: 联系我们
      ///
      /// Locales: en
      var 联系我们: RswiftResources.StringResource { .init(key: "联系我们", tableName: "Localizable", source: source, developmentValue: "Contact us", comment: nil) }

      /// en translation: English
      ///
      /// Key: 英文
      ///
      /// Locales: en
      var 英文: RswiftResources.StringResource { .init(key: "英文", tableName: "Localizable", source: source, developmentValue: "English", comment: nil) }

      /// en translation: you have dismissed the group chat
      ///
      /// Key: 解散了群聊
      ///
      /// Locales: en
      var 解散了群聊: RswiftResources.StringResource { .init(key: "解散了群聊", tableName: "Localizable", source: source, developmentValue: "you have dismissed the group chat", comment: nil) }

      /// en translation: dismiss the chat
      ///
      /// Key: 解散群聊
      ///
      /// Locales: en
      var 解散群聊: RswiftResources.StringResource { .init(key: "解散群聊", tableName: "Localizable", source: source, developmentValue: "dismiss the chat", comment: nil) }

      /// en translation: After the group chat is dissolved, you will lose contact with the group members.
      ///
      /// Key: 解散群聊后，将失去和群成员的联系。
      ///
      /// Locales: en
      var 解散群聊后将失去和群成员的联系: RswiftResources.StringResource { .init(key: "解散群聊后，将失去和群成员的联系。", tableName: "Localizable", source: source, developmentValue: "After the group chat is dissolved, you will lose contact with the group members.", comment: nil) }

      /// en translation: Settings
      ///
      /// Key: 设置
      ///
      /// Locales: en
      var 设置: RswiftResources.StringResource { .init(key: "设置", tableName: "Localizable", source: source, developmentValue: "Settings", comment: nil) }

      /// en translation: Set notes
      ///
      /// Key: 设置备注
      ///
      /// Locales: en
      var 设置备注: RswiftResources.StringResource { .init(key: "设置备注", tableName: "Localizable", source: source, developmentValue: "Set notes", comment: nil) }

      /// en translation: The announcement will inform all group members. Do you want to publish it?
      ///
      /// Key: 该公告会通知全部群成员，是否发布？
      ///
      /// Locales: en
      var 该公告会通知全部群成员是否发布: RswiftResources.StringResource { .init(key: "该公告会通知全部群成员，是否发布？", tableName: "Localizable", source: source, developmentValue: "The announcement will inform all group members. Do you want to publish it?", comment: nil) }

      /// en translation: This post is only visible to the person who posted it
      ///
      /// Key: 该帖子仅发帖人可见
      ///
      /// Locales: en
      var 该帖子仅发帖人可见: RswiftResources.StringResource { .init(key: "该帖子仅发帖人可见", tableName: "Localizable", source: source, developmentValue: "This post is only visible to the person who posted it", comment: nil) }

      /// en translation: This post is only visible to fans, please follow and check it out
      ///
      /// Key: 该帖子仅粉丝可见，请关注后查看
      ///
      /// Locales: en
      var 该帖子仅粉丝可见请关注后查看: RswiftResources.StringResource { .init(key: "该帖子仅粉丝可见，请关注后查看", tableName: "Localizable", source: source, developmentValue: "This post is only visible to fans, please follow and check it out", comment: nil) }

      /// en translation: This post has been deleted
      ///
      /// Key: 该帖子已被删除
      ///
      /// Locales: en
      var 该帖子已被删除: RswiftResources.StringResource { .init(key: "该帖子已被删除", tableName: "Localizable", source: source, developmentValue: "This post has been deleted", comment: nil) }

      /// en translation: The user has been set and cannot be added!
      ///
      /// Key: 该用户已设置不可添加！
      ///
      /// Locales: en
      var 该用户已设置不可添加: RswiftResources.StringResource { .init(key: "该用户已设置不可添加！", tableName: "Localizable", source: source, developmentValue: "The user has been set and cannot be added!", comment: nil) }

      /// en translation: Language
      ///
      /// Key: 语言
      ///
      /// Locales: en
      var 语言: RswiftResources.StringResource { .init(key: "语言", tableName: "Localizable", source: source, developmentValue: "Language", comment: nil) }

      /// en translation: Language setting
      ///
      /// Key: 语言设置
      ///
      /// Locales: en
      var 语言设置: RswiftResources.StringResource { .init(key: "语言设置", tableName: "Localizable", source: source, developmentValue: "Language setting", comment: nil) }

      /// en translation: app setting
      ///
      /// Key: 账号设置
      ///
      /// Locales: en
      var 账号设置: RswiftResources.StringResource { .init(key: "账号设置", tableName: "Localizable", source: source, developmentValue: "app setting", comment: nil) }

      /// en translation: Account Manage
      ///
      /// Key: 账户管理
      ///
      /// Locales: en
      var 账户管理: RswiftResources.StringResource { .init(key: "账户管理", tableName: "Localizable", source: source, developmentValue: "Account Manage", comment: nil) }

      /// en translation: Super Group
      ///
      /// Key: 超级群
      ///
      /// Locales: en
      var 超级群: RswiftResources.StringResource { .init(key: "超级群", tableName: "Localizable", source: source, developmentValue: "Super Group", comment: nil) }

      /// en translation: System
      ///
      /// Key: 跟随系统
      ///
      /// Locales: en
      var 跟随系统: RswiftResources.StringResource { .init(key: "跟随系统", tableName: "Localizable", source: source, developmentValue: "System", comment: nil) }

      /// en translation: removed from group chat
      ///
      /// Key: 踢出群聊
      ///
      /// Locales: en
      var 踢出群聊: RswiftResources.StringResource { .init(key: "踢出群聊", tableName: "Localizable", source: source, developmentValue: "removed from group chat", comment: nil) }

      /// en translation: Forward
      ///
      /// Key: 转发
      ///
      /// Locales: en
      var 转发: RswiftResources.StringResource { .init(key: "转发", tableName: "Localizable", source: source, developmentValue: "Forward", comment: nil) }

      /// en translation: Trans to text
      ///
      /// Key: 转文字
      ///
      /// Locales: en
      var 转文字: RswiftResources.StringResource { .init(key: "转文字", tableName: "Localizable", source: source, developmentValue: "Trans to text", comment: nil) }

      /// en translation: Typing...
      ///
      /// Key: 输入中...
      ///
      /// Locales: en
      var 输入中: RswiftResources.StringResource { .init(key: "输入中...", tableName: "Localizable", source: source, developmentValue: "Typing...", comment: nil) }

      /// en translation: Enter group chat
      ///
      /// Key: 进入群聊
      ///
      /// Locales: en
      var 进入群聊: RswiftResources.StringResource { .init(key: "进入群聊", tableName: "Localizable", source: source, developmentValue: "Enter group chat", comment: nil) }

      /// en translation: Connect Failed
      ///
      /// Key: 连接失败
      ///
      /// Locales: en
      var 连接失败: RswiftResources.StringResource { .init(key: "连接失败", tableName: "Localizable", source: source, developmentValue: "Connect Failed", comment: nil) }

      /// en translation: log out
      ///
      /// Key: 退出登录
      ///
      /// Locales: en
      var 退出登录: RswiftResources.StringResource { .init(key: "退出登录", tableName: "Localizable", source: source, developmentValue: "log out", comment: nil) }

      /// en translation: quit the chat
      ///
      /// Key: 退出群聊
      ///
      /// Locales: en
      var 退出群聊: RswiftResources.StringResource { .init(key: "退出群聊", tableName: "Localizable", source: source, developmentValue: "quit the chat", comment: nil) }

      /// en translation: After you quit group chat, you will no longer receive this group chat information.
      ///
      /// Key: 退出群聊后，将不再接收此群聊信息。
      ///
      /// Locales: en
      var 退出群聊后将不再接收此群聊信息: RswiftResources.StringResource { .init(key: "退出群聊后，将不再接收此群聊信息。", tableName: "Localizable", source: source, developmentValue: "After you quit group chat, you will no longer receive this group chat information.", comment: nil) }

      /// en translation: Notification
      ///
      /// Key: 通知
      ///
      /// Locales: en
      var 通知: RswiftResources.StringResource { .init(key: "通知", tableName: "Localizable", source: source, developmentValue: "Notification", comment: nil) }

      /// en translation: Contact
      ///
      /// Key: 通讯录
      ///
      /// Locales: en
      var 通讯录: RswiftResources.StringResource { .init(key: "通讯录", tableName: "Localizable", source: source, developmentValue: "Contact", comment: nil) }

      /// en translation: Search and add by user ID number/mobile phone number/email/nickname
      ///
      /// Key: 通过用户ID号/手机号/邮箱/昵称搜索添加
      ///
      /// Locales: en
      var 通过用户ID号手机号邮箱昵称搜索添加: RswiftResources.StringResource { .init(key: "通过用户ID号/手机号/邮箱/昵称搜索添加", tableName: "Localizable", source: source, developmentValue: "Search and add by user ID number/mobile phone number/email/nickname", comment: nil) }

      /// en translation: Search and add an user by user ID number
      ///
      /// Key: 通过用户ID号搜索添加
      ///
      /// Locales: en
      var 通过用户ID号搜索添加: RswiftResources.StringResource { .init(key: "通过用户ID号搜索添加", tableName: "Localizable", source: source, developmentValue: "Search and add an user by user ID number", comment: nil) }

      /// en translation: Text your card
      ///
      /// Key: 通过短信发送
      ///
      /// Locales: en
      var 通过短信发送: RswiftResources.StringResource { .init(key: "通过短信发送", tableName: "Localizable", source: source, developmentValue: "Text your card", comment: nil) }

      /// en translation: Email your card
      ///
      /// Key: 通过邮箱发送
      ///
      /// Locales: en
      var 通过邮箱发送: RswiftResources.StringResource { .init(key: "通过邮箱发送", tableName: "Localizable", source: source, developmentValue: "Email your card", comment: nil) }

      /// en translation: invited 
      ///
      /// Key: 邀请
      ///
      /// Locales: en
      var 邀请: RswiftResources.StringResource { .init(key: "邀请", tableName: "Localizable", source: source, developmentValue: "invited ", comment: nil) }

      /// en translation: Email failed to send
      ///
      /// Key: 邮件发送失败
      ///
      /// Locales: en
      var 邮件发送失败: RswiftResources.StringResource { .init(key: "邮件发送失败", tableName: "Localizable", source: source, developmentValue: "Email failed to send", comment: nil) }

      /// en translation: Email has been sent
      ///
      /// Key: 邮件已发送
      ///
      /// Locales: en
      var 邮件已发送: RswiftResources.StringResource { .init(key: "邮件已发送", tableName: "Localizable", source: source, developmentValue: "Email has been sent", comment: nil) }

      /// en translation: re-edit
      ///
      /// Key: 重新编辑
      ///
      /// Locales: en
      var 重新编辑: RswiftResources.StringResource { .init(key: "重新编辑", tableName: "Localizable", source: source, developmentValue: "re-edit", comment: nil) }

      /// en translation: Burn time setting:
      ///
      /// Key: 阅后即焚时间设置
      ///
      /// Locales: en
      var 阅后即焚时间设置: RswiftResources.StringResource { .init(key: "阅后即焚时间设置", tableName: "Localizable", source: source, developmentValue: "Burn time setting:", comment: nil) }

      /// en translation: Privacy Agreement
      ///
      /// Key: 隐私协议
      ///
      /// Locales: en
      var 隐私协议: RswiftResources.StringResource { .init(key: "隐私协议", tableName: "Localizable", source: source, developmentValue: "Privacy Agreement", comment: nil) }

      /// en translation: Media
      ///
      /// Key: 音视频
      ///
      /// Locales: en
      var 音视频: RswiftResources.StringResource { .init(key: "音视频", tableName: "Localizable", source: source, developmentValue: "Media", comment: nil) }

      /// en translation: Color Remark
      ///
      /// Key: 颜色备注
      ///
      /// Locales: en
      var 颜色备注: RswiftResources.StringResource { .init(key: "颜色备注", tableName: "Localizable", source: source, developmentValue: "Color Remark", comment: nil) }
    }
  }

  /// This `_R.color` struct is generated, and contains static references to 14 colors.
  struct color {
    let bundle: Foundation.Bundle

    /// Color `AccentColor`.
    var accentColor: RswiftResources.ColorResource { .init(name: "AccentColor", path: [], bundle: bundle) }

    /// Color `BackgroundColor`.
    var backgroundColor: RswiftResources.ColorResource { .init(name: "BackgroundColor", path: [], bundle: bundle) }

    /// Color `IconColor`.
    var iconColor: RswiftResources.ColorResource { .init(name: "IconColor", path: [], bundle: bundle) }

    /// Color `SeperatorColor`.
    var seperatorColor: RswiftResources.ColorResource { .init(name: "SeperatorColor", path: [], bundle: bundle) }

    /// Color `TextColor22`.
    var textColor22: RswiftResources.ColorResource { .init(name: "TextColor22", path: [], bundle: bundle) }

    /// Color `TextColor33`.
    var textColor33: RswiftResources.ColorResource { .init(name: "TextColor33", path: [], bundle: bundle) }

    /// Color `TextColor66`.
    var textColor66: RswiftResources.ColorResource { .init(name: "TextColor66", path: [], bundle: bundle) }

    /// Color `TextColor77`.
    var textColor77: RswiftResources.ColorResource { .init(name: "TextColor77", path: [], bundle: bundle) }

    /// Color `TextColor99`.
    var textColor99: RswiftResources.ColorResource { .init(name: "TextColor99", path: [], bundle: bundle) }

    /// Color `TheamColor`.
    var theamColor: RswiftResources.ColorResource { .init(name: "TheamColor", path: [], bundle: bundle) }

    /// Color `agreeColor`.
    var agreeColor: RswiftResources.ColorResource { .init(name: "agreeColor", path: [], bundle: bundle) }

    /// Color `disableColor`.
    var disableColor: RswiftResources.ColorResource { .init(name: "disableColor", path: [], bundle: bundle) }

    /// Color `rejectColor`.
    var rejectColor: RswiftResources.ColorResource { .init(name: "rejectColor", path: [], bundle: bundle) }

    /// Color `unknownColor`.
    var unknownColor: RswiftResources.ColorResource { .init(name: "unknownColor", path: [], bundle: bundle) }
  }

  /// This `_R.image` struct is generated, and contains static references to 388 images.
  struct image {
    let bundle: Foundation.Bundle

    /// Image `AC`.
    var aC: RswiftResources.ImageResource { .init(name: "AC", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `AD`.
    var aD: RswiftResources.ImageResource { .init(name: "AD", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `AE`.
    var aE: RswiftResources.ImageResource { .init(name: "AE", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `AF`.
    var aF: RswiftResources.ImageResource { .init(name: "AF", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `AG`.
    var aG: RswiftResources.ImageResource { .init(name: "AG", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `AI`.
    var aI: RswiftResources.ImageResource { .init(name: "AI", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `AL`.
    var aL: RswiftResources.ImageResource { .init(name: "AL", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `AM`.
    var aM: RswiftResources.ImageResource { .init(name: "AM", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `AN`.
    var aN: RswiftResources.ImageResource { .init(name: "AN", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `AO`.
    var aO: RswiftResources.ImageResource { .init(name: "AO", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `AQ`.
    var aQ: RswiftResources.ImageResource { .init(name: "AQ", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `AR`.
    var aR: RswiftResources.ImageResource { .init(name: "AR", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `AS`.
    var aS: RswiftResources.ImageResource { .init(name: "AS", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `AT`.
    var aT: RswiftResources.ImageResource { .init(name: "AT", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `AU`.
    var aU: RswiftResources.ImageResource { .init(name: "AU", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `AW`.
    var aW: RswiftResources.ImageResource { .init(name: "AW", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `AX`.
    var aX: RswiftResources.ImageResource { .init(name: "AX", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `AZ`.
    var aZ: RswiftResources.ImageResource { .init(name: "AZ", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `BA`.
    var bA: RswiftResources.ImageResource { .init(name: "BA", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `BB`.
    var bB: RswiftResources.ImageResource { .init(name: "BB", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `BD`.
    var bD: RswiftResources.ImageResource { .init(name: "BD", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `BE`.
    var bE: RswiftResources.ImageResource { .init(name: "BE", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `BF`.
    var bF: RswiftResources.ImageResource { .init(name: "BF", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `BG`.
    var bG: RswiftResources.ImageResource { .init(name: "BG", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `BH`.
    var bH: RswiftResources.ImageResource { .init(name: "BH", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `BI`.
    var bI: RswiftResources.ImageResource { .init(name: "BI", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `BJ`.
    var bJ: RswiftResources.ImageResource { .init(name: "BJ", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `BL`.
    var bL: RswiftResources.ImageResource { .init(name: "BL", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `BM`.
    var bM: RswiftResources.ImageResource { .init(name: "BM", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `BN`.
    var bN: RswiftResources.ImageResource { .init(name: "BN", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `BO`.
    var bO: RswiftResources.ImageResource { .init(name: "BO", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `BQ`.
    var bQ: RswiftResources.ImageResource { .init(name: "BQ", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `BR`.
    var bR: RswiftResources.ImageResource { .init(name: "BR", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `BS`.
    var bS: RswiftResources.ImageResource { .init(name: "BS", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `BT`.
    var bT: RswiftResources.ImageResource { .init(name: "BT", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `BV`.
    var bV: RswiftResources.ImageResource { .init(name: "BV", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `BW`.
    var bW: RswiftResources.ImageResource { .init(name: "BW", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `BY`.
    var bY: RswiftResources.ImageResource { .init(name: "BY", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `BZ`.
    var bZ: RswiftResources.ImageResource { .init(name: "BZ", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `CA`.
    var cA: RswiftResources.ImageResource { .init(name: "CA", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `CC`.
    var cC: RswiftResources.ImageResource { .init(name: "CC", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `CD`.
    var cD: RswiftResources.ImageResource { .init(name: "CD", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `CF`.
    var cF: RswiftResources.ImageResource { .init(name: "CF", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `CG`.
    var cG: RswiftResources.ImageResource { .init(name: "CG", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `CH`.
    var cH: RswiftResources.ImageResource { .init(name: "CH", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `CI`.
    var cI: RswiftResources.ImageResource { .init(name: "CI", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `CK`.
    var cK: RswiftResources.ImageResource { .init(name: "CK", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `CL`.
    var cL: RswiftResources.ImageResource { .init(name: "CL", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `CM`.
    var cM: RswiftResources.ImageResource { .init(name: "CM", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `CN`.
    var cN: RswiftResources.ImageResource { .init(name: "CN", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `CO`.
    var cO: RswiftResources.ImageResource { .init(name: "CO", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `CR`.
    var cR: RswiftResources.ImageResource { .init(name: "CR", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `CU`.
    var cU: RswiftResources.ImageResource { .init(name: "CU", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `CV`.
    var cV: RswiftResources.ImageResource { .init(name: "CV", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `CW`.
    var cW: RswiftResources.ImageResource { .init(name: "CW", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `CX`.
    var cX: RswiftResources.ImageResource { .init(name: "CX", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `CY`.
    var cY: RswiftResources.ImageResource { .init(name: "CY", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `CZ`.
    var cZ: RswiftResources.ImageResource { .init(name: "CZ", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `DE`.
    var dE: RswiftResources.ImageResource { .init(name: "DE", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `DJ`.
    var dJ: RswiftResources.ImageResource { .init(name: "DJ", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `DK`.
    var dK: RswiftResources.ImageResource { .init(name: "DK", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `DM`.
    var dM: RswiftResources.ImageResource { .init(name: "DM", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `DO`.
    var dO: RswiftResources.ImageResource { .init(name: "DO", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `DZ`.
    var dZ: RswiftResources.ImageResource { .init(name: "DZ", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `EC`.
    var eC: RswiftResources.ImageResource { .init(name: "EC", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `EE`.
    var eE: RswiftResources.ImageResource { .init(name: "EE", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `EG`.
    var eG: RswiftResources.ImageResource { .init(name: "EG", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `EH`.
    var eH: RswiftResources.ImageResource { .init(name: "EH", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `ER`.
    var eR: RswiftResources.ImageResource { .init(name: "ER", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `ES`.
    var eS: RswiftResources.ImageResource { .init(name: "ES", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `ET`.
    var eT: RswiftResources.ImageResource { .init(name: "ET", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `FI`.
    var fI: RswiftResources.ImageResource { .init(name: "FI", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `FJ`.
    var fJ: RswiftResources.ImageResource { .init(name: "FJ", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `FK`.
    var fK: RswiftResources.ImageResource { .init(name: "FK", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `FM`.
    var fM: RswiftResources.ImageResource { .init(name: "FM", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `FO`.
    var fO: RswiftResources.ImageResource { .init(name: "FO", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `FR`.
    var fR: RswiftResources.ImageResource { .init(name: "FR", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `FX`.
    var fX: RswiftResources.ImageResource { .init(name: "FX", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `GA`.
    var gA: RswiftResources.ImageResource { .init(name: "GA", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `GB`.
    var gB: RswiftResources.ImageResource { .init(name: "GB", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `GD`.
    var gD: RswiftResources.ImageResource { .init(name: "GD", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `GE`.
    var gE: RswiftResources.ImageResource { .init(name: "GE", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `GF`.
    var gF: RswiftResources.ImageResource { .init(name: "GF", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `GG`.
    var gG: RswiftResources.ImageResource { .init(name: "GG", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `GH`.
    var gH: RswiftResources.ImageResource { .init(name: "GH", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `GI`.
    var gI: RswiftResources.ImageResource { .init(name: "GI", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `GL`.
    var gL: RswiftResources.ImageResource { .init(name: "GL", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `GM`.
    var gM: RswiftResources.ImageResource { .init(name: "GM", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `GN`.
    var gN: RswiftResources.ImageResource { .init(name: "GN", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `GP`.
    var gP: RswiftResources.ImageResource { .init(name: "GP", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `GQ`.
    var gQ: RswiftResources.ImageResource { .init(name: "GQ", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `GR`.
    var gR: RswiftResources.ImageResource { .init(name: "GR", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `GS`.
    var gS: RswiftResources.ImageResource { .init(name: "GS", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `GT`.
    var gT: RswiftResources.ImageResource { .init(name: "GT", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `GU`.
    var gU: RswiftResources.ImageResource { .init(name: "GU", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `GW`.
    var gW: RswiftResources.ImageResource { .init(name: "GW", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `GY`.
    var gY: RswiftResources.ImageResource { .init(name: "GY", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `HK`.
    var hK: RswiftResources.ImageResource { .init(name: "HK", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `HM`.
    var hM: RswiftResources.ImageResource { .init(name: "HM", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `HN`.
    var hN: RswiftResources.ImageResource { .init(name: "HN", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `HR`.
    var hR: RswiftResources.ImageResource { .init(name: "HR", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `HT`.
    var hT: RswiftResources.ImageResource { .init(name: "HT", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `HU`.
    var hU: RswiftResources.ImageResource { .init(name: "HU", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `ID`.
    var iD: RswiftResources.ImageResource { .init(name: "ID", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `IE`.
    var iE: RswiftResources.ImageResource { .init(name: "IE", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `IL`.
    var iL: RswiftResources.ImageResource { .init(name: "IL", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `IM`.
    var iM: RswiftResources.ImageResource { .init(name: "IM", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `IN`.
    var iN: RswiftResources.ImageResource { .init(name: "IN", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `IO`.
    var iO: RswiftResources.ImageResource { .init(name: "IO", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `IQ`.
    var iQ: RswiftResources.ImageResource { .init(name: "IQ", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `IR`.
    var iR: RswiftResources.ImageResource { .init(name: "IR", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `IS`.
    var iS: RswiftResources.ImageResource { .init(name: "IS", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `IT`.
    var iT: RswiftResources.ImageResource { .init(name: "IT", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `JE`.
    var jE: RswiftResources.ImageResource { .init(name: "JE", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `JM`.
    var jM: RswiftResources.ImageResource { .init(name: "JM", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `JO`.
    var jO: RswiftResources.ImageResource { .init(name: "JO", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `JP`.
    var jP: RswiftResources.ImageResource { .init(name: "JP", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `KE`.
    var kE: RswiftResources.ImageResource { .init(name: "KE", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `KG`.
    var kG: RswiftResources.ImageResource { .init(name: "KG", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `KH`.
    var kH: RswiftResources.ImageResource { .init(name: "KH", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `KI`.
    var kI: RswiftResources.ImageResource { .init(name: "KI", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `KM`.
    var kM: RswiftResources.ImageResource { .init(name: "KM", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `KN`.
    var kN: RswiftResources.ImageResource { .init(name: "KN", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `KP`.
    var kP: RswiftResources.ImageResource { .init(name: "KP", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `KR`.
    var kR: RswiftResources.ImageResource { .init(name: "KR", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `KW`.
    var kW: RswiftResources.ImageResource { .init(name: "KW", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `KY`.
    var kY: RswiftResources.ImageResource { .init(name: "KY", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `KZ`.
    var kZ: RswiftResources.ImageResource { .init(name: "KZ", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `LA`.
    var lA: RswiftResources.ImageResource { .init(name: "LA", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `LB`.
    var lB: RswiftResources.ImageResource { .init(name: "LB", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `LC`.
    var lC: RswiftResources.ImageResource { .init(name: "LC", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `LI`.
    var lI: RswiftResources.ImageResource { .init(name: "LI", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `LK`.
    var lK: RswiftResources.ImageResource { .init(name: "LK", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `LR`.
    var lR: RswiftResources.ImageResource { .init(name: "LR", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `LS`.
    var lS: RswiftResources.ImageResource { .init(name: "LS", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `LT`.
    var lT: RswiftResources.ImageResource { .init(name: "LT", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `LU`.
    var lU: RswiftResources.ImageResource { .init(name: "LU", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `LV`.
    var lV: RswiftResources.ImageResource { .init(name: "LV", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `LY`.
    var lY: RswiftResources.ImageResource { .init(name: "LY", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `MA`.
    var mA: RswiftResources.ImageResource { .init(name: "MA", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `MC`.
    var mC: RswiftResources.ImageResource { .init(name: "MC", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `MD`.
    var mD: RswiftResources.ImageResource { .init(name: "MD", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `ME`.
    var mE: RswiftResources.ImageResource { .init(name: "ME", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `MF`.
    var mF: RswiftResources.ImageResource { .init(name: "MF", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `MG`.
    var mG: RswiftResources.ImageResource { .init(name: "MG", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `MH`.
    var mH: RswiftResources.ImageResource { .init(name: "MH", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `MK`.
    var mK: RswiftResources.ImageResource { .init(name: "MK", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `ML`.
    var mL: RswiftResources.ImageResource { .init(name: "ML", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `MM`.
    var mM: RswiftResources.ImageResource { .init(name: "MM", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `MN`.
    var mN: RswiftResources.ImageResource { .init(name: "MN", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `MO`.
    var mO: RswiftResources.ImageResource { .init(name: "MO", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `MP`.
    var mP: RswiftResources.ImageResource { .init(name: "MP", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `MQ`.
    var mQ: RswiftResources.ImageResource { .init(name: "MQ", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `MR`.
    var mR: RswiftResources.ImageResource { .init(name: "MR", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `MS`.
    var mS: RswiftResources.ImageResource { .init(name: "MS", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `MT`.
    var mT: RswiftResources.ImageResource { .init(name: "MT", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `MU`.
    var mU: RswiftResources.ImageResource { .init(name: "MU", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `MV`.
    var mV: RswiftResources.ImageResource { .init(name: "MV", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `MW`.
    var mW: RswiftResources.ImageResource { .init(name: "MW", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `MX`.
    var mX: RswiftResources.ImageResource { .init(name: "MX", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `MY`.
    var mY: RswiftResources.ImageResource { .init(name: "MY", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `MZ`.
    var mZ: RswiftResources.ImageResource { .init(name: "MZ", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `NA`.
    var nA: RswiftResources.ImageResource { .init(name: "NA", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `NC`.
    var nC: RswiftResources.ImageResource { .init(name: "NC", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `NE`.
    var nE: RswiftResources.ImageResource { .init(name: "NE", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `NF`.
    var nF: RswiftResources.ImageResource { .init(name: "NF", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `NG`.
    var nG: RswiftResources.ImageResource { .init(name: "NG", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `NI`.
    var nI: RswiftResources.ImageResource { .init(name: "NI", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `NL`.
    var nL: RswiftResources.ImageResource { .init(name: "NL", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `NO`.
    var nO: RswiftResources.ImageResource { .init(name: "NO", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `NP`.
    var nP: RswiftResources.ImageResource { .init(name: "NP", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `NR`.
    var nR: RswiftResources.ImageResource { .init(name: "NR", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `NU`.
    var nU: RswiftResources.ImageResource { .init(name: "NU", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `NZ`.
    var nZ: RswiftResources.ImageResource { .init(name: "NZ", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `OM`.
    var oM: RswiftResources.ImageResource { .init(name: "OM", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `PA`.
    var pA: RswiftResources.ImageResource { .init(name: "PA", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `PE`.
    var pE: RswiftResources.ImageResource { .init(name: "PE", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `PF`.
    var pF: RswiftResources.ImageResource { .init(name: "PF", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `PG`.
    var pG: RswiftResources.ImageResource { .init(name: "PG", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `PH`.
    var pH: RswiftResources.ImageResource { .init(name: "PH", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `PK`.
    var pK: RswiftResources.ImageResource { .init(name: "PK", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `PL`.
    var pL: RswiftResources.ImageResource { .init(name: "PL", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `PM`.
    var pM: RswiftResources.ImageResource { .init(name: "PM", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `PN`.
    var pN: RswiftResources.ImageResource { .init(name: "PN", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `PR`.
    var pR: RswiftResources.ImageResource { .init(name: "PR", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `PS`.
    var pS: RswiftResources.ImageResource { .init(name: "PS", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `PT`.
    var pT: RswiftResources.ImageResource { .init(name: "PT", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `PW`.
    var pW: RswiftResources.ImageResource { .init(name: "PW", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `PY`.
    var pY: RswiftResources.ImageResource { .init(name: "PY", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `QA`.
    var qA: RswiftResources.ImageResource { .init(name: "QA", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `R2`.
    var r2: RswiftResources.ImageResource { .init(name: "R2", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `RE`.
    var rE: RswiftResources.ImageResource { .init(name: "RE", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `RO`.
    var rO: RswiftResources.ImageResource { .init(name: "RO", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `RS`.
    var rS: RswiftResources.ImageResource { .init(name: "RS", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `RU`.
    var rU: RswiftResources.ImageResource { .init(name: "RU", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `RW`.
    var rW: RswiftResources.ImageResource { .init(name: "RW", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `SA`.
    var sA: RswiftResources.ImageResource { .init(name: "SA", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `SB`.
    var sB: RswiftResources.ImageResource { .init(name: "SB", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `SC`.
    var sC: RswiftResources.ImageResource { .init(name: "SC", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `SD`.
    var sD: RswiftResources.ImageResource { .init(name: "SD", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `SE`.
    var sE: RswiftResources.ImageResource { .init(name: "SE", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `SG`.
    var sG: RswiftResources.ImageResource { .init(name: "SG", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `SH`.
    var sH: RswiftResources.ImageResource { .init(name: "SH", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `SI`.
    var sI: RswiftResources.ImageResource { .init(name: "SI", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `SJ`.
    var sJ: RswiftResources.ImageResource { .init(name: "SJ", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `SK`.
    var sK: RswiftResources.ImageResource { .init(name: "SK", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `SL`.
    var sL: RswiftResources.ImageResource { .init(name: "SL", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `SM`.
    var sM: RswiftResources.ImageResource { .init(name: "SM", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `SN`.
    var sN: RswiftResources.ImageResource { .init(name: "SN", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `SO`.
    var sO: RswiftResources.ImageResource { .init(name: "SO", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `SR`.
    var sR: RswiftResources.ImageResource { .init(name: "SR", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `SS`.
    var sS: RswiftResources.ImageResource { .init(name: "SS", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `ST`.
    var sT: RswiftResources.ImageResource { .init(name: "ST", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `SV`.
    var sV: RswiftResources.ImageResource { .init(name: "SV", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `SX`.
    var sX: RswiftResources.ImageResource { .init(name: "SX", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `SY`.
    var sY: RswiftResources.ImageResource { .init(name: "SY", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `SZ`.
    var sZ: RswiftResources.ImageResource { .init(name: "SZ", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `TC`.
    var tC: RswiftResources.ImageResource { .init(name: "TC", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `TD`.
    var tD: RswiftResources.ImageResource { .init(name: "TD", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `TF`.
    var tF: RswiftResources.ImageResource { .init(name: "TF", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `TG`.
    var tG: RswiftResources.ImageResource { .init(name: "TG", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `TH`.
    var tH: RswiftResources.ImageResource { .init(name: "TH", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `TJ`.
    var tJ: RswiftResources.ImageResource { .init(name: "TJ", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `TK`.
    var tK: RswiftResources.ImageResource { .init(name: "TK", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `TL`.
    var tL: RswiftResources.ImageResource { .init(name: "TL", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `TM`.
    var tM: RswiftResources.ImageResource { .init(name: "TM", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `TN`.
    var tN: RswiftResources.ImageResource { .init(name: "TN", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `TO`.
    var tO: RswiftResources.ImageResource { .init(name: "TO", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `TR`.
    var tR: RswiftResources.ImageResource { .init(name: "TR", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `TT`.
    var tT: RswiftResources.ImageResource { .init(name: "TT", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `TV`.
    var tV: RswiftResources.ImageResource { .init(name: "TV", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `TW`.
    var tW: RswiftResources.ImageResource { .init(name: "TW", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `TZ`.
    var tZ: RswiftResources.ImageResource { .init(name: "TZ", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `UA`.
    var uA: RswiftResources.ImageResource { .init(name: "UA", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `UG`.
    var uG: RswiftResources.ImageResource { .init(name: "UG", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `UM`.
    var uM: RswiftResources.ImageResource { .init(name: "UM", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `US`.
    var uS: RswiftResources.ImageResource { .init(name: "US", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `UY`.
    var uY: RswiftResources.ImageResource { .init(name: "UY", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `UZ`.
    var uZ: RswiftResources.ImageResource { .init(name: "UZ", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `VA`.
    var vA: RswiftResources.ImageResource { .init(name: "VA", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `VC`.
    var vC: RswiftResources.ImageResource { .init(name: "VC", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `VE`.
    var vE: RswiftResources.ImageResource { .init(name: "VE", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `VG`.
    var vG: RswiftResources.ImageResource { .init(name: "VG", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `VI`.
    var vI: RswiftResources.ImageResource { .init(name: "VI", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `VN`.
    var vN: RswiftResources.ImageResource { .init(name: "VN", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `VU`.
    var vU: RswiftResources.ImageResource { .init(name: "VU", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `WF`.
    var wF: RswiftResources.ImageResource { .init(name: "WF", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `WS`.
    var wS: RswiftResources.ImageResource { .init(name: "WS", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `XK`.
    var xK: RswiftResources.ImageResource { .init(name: "XK", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `YE`.
    var yE: RswiftResources.ImageResource { .init(name: "YE", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `YT`.
    var yT: RswiftResources.ImageResource { .init(name: "YT", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `YU`.
    var yU: RswiftResources.ImageResource { .init(name: "YU", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `ZA`.
    var zA: RswiftResources.ImageResource { .init(name: "ZA", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `ZM`.
    var zM: RswiftResources.ImageResource { .init(name: "ZM", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `ZW`.
    var zW: RswiftResources.ImageResource { .init(name: "ZW", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `alarm`.
    var alarm: RswiftResources.ImageResource { .init(name: "alarm", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `appicon`.
    var appicon: RswiftResources.ImageResource { .init(name: "appicon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `applelogo`.
    var applelogo: RswiftResources.ImageResource { .init(name: "applelogo", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `arrow.up.message`.
    var arrowUpMessage: RswiftResources.ImageResource { .init(name: "arrow.up.message", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `arrowtriangle.down.fill`.
    var arrowtriangleDownFill: RswiftResources.ImageResource { .init(name: "arrowtriangle.down.fill", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `attendace_delete`.
    var attendace_delete: RswiftResources.ImageResource { .init(name: "attendace_delete", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `bell`.
    var bell: RswiftResources.ImageResource { .init(name: "bell", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `calendar`.
    var calendar: RswiftResources.ImageResource { .init(name: "calendar", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `calendar.badge.plus`.
    var calendarBadgePlus: RswiftResources.ImageResource { .init(name: "calendar.badge.plus", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `calendar.day.timeline.left`.
    var calendarDayTimelineLeft: RswiftResources.ImageResource { .init(name: "calendar.day.timeline.left", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `calendar_filter`.
    var calendar_filter: RswiftResources.ImageResource { .init(name: "calendar_filter", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `calendar_item_arrow_down`.
    var calendar_item_arrow_down: RswiftResources.ImageResource { .init(name: "calendar_item_arrow_down", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `calendar_item_arrow_right`.
    var calendar_item_arrow_right: RswiftResources.ImageResource { .init(name: "calendar_item_arrow_right", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `camera.circle.fill`.
    var cameraCircleFill: RswiftResources.ImageResource { .init(name: "camera.circle.fill", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `checkmark`.
    var checkmark: RswiftResources.ImageResource { .init(name: "checkmark", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `checkmark.circle`.
    var checkmarkCircle: RswiftResources.ImageResource { .init(name: "checkmark.circle", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `checkmark.seal.fill`.
    var checkmarkSealFill: RswiftResources.ImageResource { .init(name: "checkmark.seal.fill", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `checkmark.seal.fill.gray`.
    var checkmarkSealFillGray: RswiftResources.ImageResource { .init(name: "checkmark.seal.fill.gray", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `chevron.backward`.
    var chevronBackward: RswiftResources.ImageResource { .init(name: "chevron.backward", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `chevron.compact.down`.
    var chevronCompactDown: RswiftResources.ImageResource { .init(name: "chevron.compact.down", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `chevron.compact.up`.
    var chevronCompactUp: RswiftResources.ImageResource { .init(name: "chevron.compact.up", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `chevron.down`.
    var chevronDown: RswiftResources.ImageResource { .init(name: "chevron.down", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `chevron.right`.
    var chevronRight: RswiftResources.ImageResource { .init(name: "chevron.right", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `chevron.up`.
    var chevronUp: RswiftResources.ImageResource { .init(name: "chevron.up", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `circle`.
    var circle: RswiftResources.ImageResource { .init(name: "circle", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `circle.fill`.
    var circleFill: RswiftResources.ImageResource { .init(name: "circle.fill", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `clock`.
    var clock: RswiftResources.ImageResource { .init(name: "clock", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `clock.arrow.circlepath`.
    var clockArrowCirclepath: RswiftResources.ImageResource { .init(name: "clock.arrow.circlepath", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `comment`.
    var comment: RswiftResources.ImageResource { .init(name: "comment", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `connection_delete`.
    var connection_delete: RswiftResources.ImageResource { .init(name: "connection_delete", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `connection_message`.
    var connection_message: RswiftResources.ImageResource { .init(name: "connection_message", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `connection_search`.
    var connection_search: RswiftResources.ImageResource { .init(name: "connection_search", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `crop`.
    var crop: RswiftResources.ImageResource { .init(name: "crop", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `edu_placeholder`.
    var edu_placeholder: RswiftResources.ImageResource { .init(name: "edu_placeholder", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `ellipsis`.
    var ellipsis: RswiftResources.ImageResource { .init(name: "ellipsis", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `ellipsis.message`.
    var ellipsisMessage: RswiftResources.ImageResource { .init(name: "ellipsis.message", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `envelope.circle.fill`.
    var envelopeCircleFill: RswiftResources.ImageResource { .init(name: "envelope.circle.fill", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `file_trans`.
    var file_trans: RswiftResources.ImageResource { .init(name: "file_trans", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `gear.circle.fill`.
    var gearCircleFill: RswiftResources.ImageResource { .init(name: "gear.circle.fill", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `gearshape`.
    var gearshape: RswiftResources.ImageResource { .init(name: "gearshape", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `google`.
    var google: RswiftResources.ImageResource { .init(name: "google", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `heart`.
    var heart: RswiftResources.ImageResource { .init(name: "heart", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `heart.fill`.
    var heartFill: RswiftResources.ImageResource { .init(name: "heart.fill", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `house`.
    var house: RswiftResources.ImageResource { .init(name: "house", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `image_message_placeholder`.
    var image_message_placeholder: RswiftResources.ImageResource { .init(name: "image_message_placeholder", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `info.circle`.
    var infoCircle: RswiftResources.ImageResource { .init(name: "info.circle", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `iphone.gen1.circle.fill`.
    var iphoneGen1CircleFill: RswiftResources.ImageResource { .init(name: "iphone.gen1.circle.fill", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `job_location`.
    var job_location: RswiftResources.ImageResource { .init(name: "job_location", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `job_mark`.
    var job_mark: RswiftResources.ImageResource { .init(name: "job_mark", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `job_marked`.
    var job_marked: RswiftResources.ImageResource { .init(name: "job_marked", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `keyboard.chevron.compact.down`.
    var keyboardChevronCompactDown: RswiftResources.ImageResource { .init(name: "keyboard.chevron.compact.down", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `lightbulb.min`.
    var lightbulbMin: RswiftResources.ImageResource { .init(name: "lightbulb.min", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `like`.
    var like: RswiftResources.ImageResource { .init(name: "like", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `line.3.horizontal`.
    var line3Horizontal: RswiftResources.ImageResource { .init(name: "line.3.horizontal", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `link`.
    var link: RswiftResources.ImageResource { .init(name: "link", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `location`.
    var location: RswiftResources.ImageResource { .init(name: "location", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `location.circle.fill`.
    var locationCircleFill: RswiftResources.ImageResource { .init(name: "location.circle.fill", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `magnifyingglass`.
    var magnifyingglass: RswiftResources.ImageResource { .init(name: "magnifyingglass", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `magnifyingglass.circle.fill`.
    var magnifyingglassCircleFill: RswiftResources.ImageResource { .init(name: "magnifyingglass.circle.fill", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mail.stack`.
    var mailStack: RswiftResources.ImageResource { .init(name: "mail.stack", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `mappin.and.ellipse`.
    var mappinAndEllipse: RswiftResources.ImageResource { .init(name: "mappin.and.ellipse", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `message`.
    var message: RswiftResources.ImageResource { .init(name: "message", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `network`.
    var network: RswiftResources.ImageResource { .init(name: "network", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `notification01`.
    var notification01: RswiftResources.ImageResource { .init(name: "notification01", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `notification02`.
    var notification02: RswiftResources.ImageResource { .init(name: "notification02", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `notification03`.
    var notification03: RswiftResources.ImageResource { .init(name: "notification03", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `notification04`.
    var notification04: RswiftResources.ImageResource { .init(name: "notification04", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `org_placeholder`.
    var org_placeholder: RswiftResources.ImageResource { .init(name: "org_placeholder", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `paintbrush.pointed`.
    var paintbrushPointed: RswiftResources.ImageResource { .init(name: "paintbrush.pointed", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `paperplane.fill`.
    var paperplaneFill: RswiftResources.ImageResource { .init(name: "paperplane.fill", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `password_invisible`.
    var password_invisible: RswiftResources.ImageResource { .init(name: "password_invisible", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `password_visible`.
    var password_visible: RswiftResources.ImageResource { .init(name: "password_visible", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `path`.
    var path: RswiftResources.ImageResource { .init(name: "path", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `pencil.line`.
    var pencilLine: RswiftResources.ImageResource { .init(name: "pencil.line", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `person.2`.
    var person2: RswiftResources.ImageResource { .init(name: "person.2", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `person.badge.plus`.
    var personBadgePlus: RswiftResources.ImageResource { .init(name: "person.badge.plus", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `person.crop.square.fill`.
    var personCropSquareFill: RswiftResources.ImageResource { .init(name: "person.crop.square.fill", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `person.fill`.
    var personFill: RswiftResources.ImageResource { .init(name: "person.fill", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `person.fill.checkmark`.
    var personFillCheckmark: RswiftResources.ImageResource { .init(name: "person.fill.checkmark", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `person.fill.questionmark`.
    var personFillQuestionmark: RswiftResources.ImageResource { .init(name: "person.fill.questionmark", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `person.fill.xmark`.
    var personFillXmark: RswiftResources.ImageResource { .init(name: "person.fill.xmark", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `phone.circle.fill`.
    var phoneCircleFill: RswiftResources.ImageResource { .init(name: "phone.circle.fill", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `pin`.
    var pin: RswiftResources.ImageResource { .init(name: "pin", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `placeholder`.
    var placeholder: RswiftResources.ImageResource { .init(name: "placeholder", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `play.circle.fill`.
    var playCircleFill: RswiftResources.ImageResource { .init(name: "play.circle.fill", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `plus.circle`.
    var plusCircle: RswiftResources.ImageResource { .init(name: "plus.circle", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `post_comment`.
    var post_comment: RswiftResources.ImageResource { .init(name: "post_comment", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `post_comment_comment`.
    var post_comment_comment: RswiftResources.ImageResource { .init(name: "post_comment_comment", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `post_comment_expend`.
    var post_comment_expend: RswiftResources.ImageResource { .init(name: "post_comment_expend", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `post_comment_like`.
    var post_comment_like: RswiftResources.ImageResource { .init(name: "post_comment_like", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `post_comment_unlike`.
    var post_comment_unlike: RswiftResources.ImageResource { .init(name: "post_comment_unlike", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `post_picture_delete`.
    var post_picture_delete: RswiftResources.ImageResource { .init(name: "post_picture_delete", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `post_repost`.
    var post_repost: RswiftResources.ImageResource { .init(name: "post_repost", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `post_share`.
    var post_share: RswiftResources.ImageResource { .init(name: "post_share", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `post_type_down`.
    var post_type_down: RswiftResources.ImageResource { .init(name: "post_type_down", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `profile_edit_userinfo`.
    var profile_edit_userinfo: RswiftResources.ImageResource { .init(name: "profile_edit_userinfo", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `proile_user`.
    var proile_user: RswiftResources.ImageResource { .init(name: "proile_user", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `qrcode`.
    var qrcode: RswiftResources.ImageResource { .init(name: "qrcode", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `questionmark.circle.fill`.
    var questionmarkCircleFill: RswiftResources.ImageResource { .init(name: "questionmark.circle.fill", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `rectangle.on.rectangle.circle.fill`.
    var rectangleOnRectangleCircleFill: RswiftResources.ImageResource { .init(name: "rectangle.on.rectangle.circle.fill", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `repeat`.
    var `repeat`: RswiftResources.ImageResource { .init(name: "repeat", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `retweet`.
    var retweet: RswiftResources.ImageResource { .init(name: "retweet", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `search_icon`.
    var search_icon: RswiftResources.ImageResource { .init(name: "search_icon", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `send`.
    var send: RswiftResources.ImageResource { .init(name: "send", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `seven.square`.
    var sevenSquare: RswiftResources.ImageResource { .init(name: "seven.square", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `shared.with.you.slash`.
    var sharedWithYouSlash: RswiftResources.ImageResource { .init(name: "shared.with.you.slash", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `square.and.arrow.up`.
    var squareAndArrowUp: RswiftResources.ImageResource { .init(name: "square.and.arrow.up", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `square.and.arrow.up.circle.fill`.
    var squareAndArrowUpCircleFill: RswiftResources.ImageResource { .init(name: "square.and.arrow.up.circle.fill", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `square.and.pencil`.
    var squareAndPencil: RswiftResources.ImageResource { .init(name: "square.and.pencil", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `square.and.pencil.circle.fill`.
    var squareAndPencilCircleFill: RswiftResources.ImageResource { .init(name: "square.and.pencil.circle.fill", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `switch.2`.
    var switch2: RswiftResources.ImageResource { .init(name: "switch.2", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `tab_admin`.
    var tab_admin: RswiftResources.ImageResource { .init(name: "tab_admin", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `tab_book`.
    var tab_book: RswiftResources.ImageResource { .init(name: "tab_book", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `tab_calendar`.
    var tab_calendar: RswiftResources.ImageResource { .init(name: "tab_calendar", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `tab_cards`.
    var tab_cards: RswiftResources.ImageResource { .init(name: "tab_cards", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `tab_home`.
    var tab_home: RswiftResources.ImageResource { .init(name: "tab_home", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `tab_person`.
    var tab_person: RswiftResources.ImageResource { .init(name: "tab_person", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `tag.fill`.
    var tagFill: RswiftResources.ImageResource { .init(name: "tag.fill", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `text.quote`.
    var textQuote: RswiftResources.ImageResource { .init(name: "text.quote", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `three.square`.
    var threeSquare: RswiftResources.ImageResource { .init(name: "three.square", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `toolbar_icon_at`.
    var toolbar_icon_at: RswiftResources.ImageResource { .init(name: "toolbar_icon_at", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `toolbar_icon_emoji`.
    var toolbar_icon_emoji: RswiftResources.ImageResource { .init(name: "toolbar_icon_emoji", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `toolbar_icon_hashtag`.
    var toolbar_icon_hashtag: RswiftResources.ImageResource { .init(name: "toolbar_icon_hashtag", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `toolbar_icon_image`.
    var toolbar_icon_image: RswiftResources.ImageResource { .init(name: "toolbar_icon_image", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `toolbar_icon_more`.
    var toolbar_icon_more: RswiftResources.ImageResource { .init(name: "toolbar_icon_more", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `toolbar_link`.
    var toolbar_link: RswiftResources.ImageResource { .init(name: "toolbar_link", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `trash.fill`.
    var trashFill: RswiftResources.ImageResource { .init(name: "trash.fill", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `triangle.fill`.
    var triangleFill: RswiftResources.ImageResource { .init(name: "triangle.fill", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `video`.
    var video: RswiftResources.ImageResource { .init(name: "video", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `viewfinder.circle.fill`.
    var viewfinderCircleFill: RswiftResources.ImageResource { .init(name: "viewfinder.circle.fill", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `wave.3.right.circle`.
    var wave3RightCircle: RswiftResources.ImageResource { .init(name: "wave.3.right.circle", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `xmark`.
    var xmark: RswiftResources.ImageResource { .init(name: "xmark", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }

    /// Image `xmark.circle.fill`.
    var xmarkCircleFill: RswiftResources.ImageResource { .init(name: "xmark.circle.fill", path: [], bundle: bundle, locale: nil, onDemandResourceTags: nil) }
  }

  /// This `_R.entitlements` struct is generated, and contains static references to 7 properties.
  struct entitlements {
    let comAppleDeveloperApplesignin = comAppleDeveloperApplesignin()
    let comAppleDeveloperAssociatedDomains = comAppleDeveloperAssociatedDomains()
    let comAppleDeveloperIcloudContainerIdentifiers = comAppleDeveloperIcloudContainerIdentifiers()
    let comAppleDeveloperIcloudServices = comAppleDeveloperIcloudServices()
    let comAppleDeveloperNfcReadersessionFormats = comAppleDeveloperNfcReadersessionFormats()
    let comAppleDeveloperUbiquityContainerIdentifiers = comAppleDeveloperUbiquityContainerIdentifiers()
    let comAppleSecurityApplicationGroups = comAppleSecurityApplicationGroups()
    struct comAppleDeveloperApplesignin {
      let `default`: String = "Default"
    }
    struct comAppleDeveloperAssociatedDomains {
      let applinksWwwTerrabyteSg: String = "applinks:www.terrabyte.sg"
    }
    struct comAppleDeveloperIcloudContainerIdentifiers {
      let iCloudWecynCom: String = "iCloud.wecyn.com"
    }
    struct comAppleDeveloperIcloudServices {
      let cloudDocuments: String = "CloudDocuments"
    }
    struct comAppleDeveloperNfcReadersessionFormats {
      let taG: String = "TAG"
    }
    struct comAppleDeveloperUbiquityContainerIdentifiers {
      let iCloudWecynCom: String = "iCloud.wecyn.com"
    }
    struct comAppleSecurityApplicationGroups {
      let groupWidgetCalendar: String = "group.widget.calendar"
    }
  }

  /// This `_R.file` struct is generated, and contains static references to 5 resource files.
  struct file {
    let bundle: Foundation.Bundle

    /// Resource file `OIMUIResource.bundle`.
    var oimuiResourceBundle: RswiftResources.FileResource { .init(name: "OIMUIResource", pathExtension: "bundle", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `aip.license`.
    var aipLicense: RswiftResources.FileResource { .init(name: "aip", pathExtension: "license", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `bundle.js`.
    var bundleJs: RswiftResources.FileResource { .init(name: "bundle", pathExtension: "js", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `nlp.js`.
    var nlpJs: RswiftResources.FileResource { .init(name: "nlp", pathExtension: "js", bundle: bundle, locale: LocaleReference.none) }

    /// Resource file `rrule.js`.
    var rruleJs: RswiftResources.FileResource { .init(name: "rrule", pathExtension: "js", bundle: bundle, locale: LocaleReference.none) }
  }

  /// This `_R.nib` struct is generated, and contains static references to 35 nibs.
  struct nib {
    let bundle: Foundation.Bundle

    /// Nib `AddUserEducationExperienceView`.
    var addUserEducationExperienceView: RswiftResources.NibReference<AddUserEducationExperienceView> { .init(name: "AddUserEducationExperienceView", bundle: bundle) }

    /// Nib `AddUserWorkExperienceView`.
    var addUserWorkExperienceView: RswiftResources.NibReference<AddUserWorkExperienceView> { .init(name: "AddUserWorkExperienceView", bundle: bundle) }

    /// Nib `AdminAddDomainContainer`.
    var adminAddDomainContainer: RswiftResources.NibReference<AdminAddDomainContainer> { .init(name: "AdminAddDomainContainer", bundle: bundle) }

    /// Nib `AdminAddRoleContainer`.
    var adminAddRoleContainer: RswiftResources.NibReference<AdminAddRoleContainer> { .init(name: "AdminAddRoleContainer", bundle: bundle) }

    /// Nib `AdminAddRoomContainer`.
    var adminAddRoomContainer: RswiftResources.NibReference<AdminAddRoomContainer> { .init(name: "AdminAddRoomContainer", bundle: bundle) }

    /// Nib `AdminDepartmentDetailContainer`.
    var adminDepartmentDetailContainer: RswiftResources.NibReference<AdminDepartmentDetailContainer> { .init(name: "AdminDepartmentDetailContainer", bundle: bundle) }

    /// Nib `AdminEditStaffContainer`.
    var adminEditStaffContainer: RswiftResources.NibReference<AdminEditStaffContainer> { .init(name: "AdminEditStaffContainer", bundle: bundle) }

    /// Nib `AdminEditStaffExpContainer`.
    var adminEditStaffExpContainer: RswiftResources.NibReference<AdminEditStaffExpContainer> { .init(name: "AdminEditStaffExpContainer", bundle: bundle) }

    /// Nib `AdminNewStaffCell`.
    var adminNewStaffCell: RswiftResources.NibReference<AdminNewStaffCell> { .init(name: "AdminNewStaffCell", bundle: bundle) }

    /// Nib `AdminRoleItemCell`.
    var adminRoleItemCell: RswiftResources.NibReference<AdminRoleItemCell> { .init(name: "AdminRoleItemCell", bundle: bundle) }

    /// Nib `AdminRoomCell`.
    var adminRoomCell: RswiftResources.NibReference<AdminRoomCell> { .init(name: "AdminRoomCell", bundle: bundle) }

    /// Nib `AdminStaffExpsCell`.
    var adminStaffExpsCell: RswiftResources.NibReference<AdminStaffExpsCell> { .init(name: "AdminStaffExpsCell", bundle: bundle) }

    /// Nib `AdminStaffItemCell`.
    var adminStaffItemCell: RswiftResources.NibReference<AdminStaffItemCell> { .init(name: "AdminStaffItemCell", bundle: bundle) }

    /// Nib `BusinessCardCell`.
    var businessCardCell: RswiftResources.NibReference<BusinessCardCell> { .init(name: "BusinessCardCell", bundle: bundle) }

    /// Nib `CaledarItemCell`.
    var caledarItemCell: RswiftResources.NibReference<CaledarItemCell> { .init(name: "CaledarItemCell", bundle: bundle) }

    /// Nib `ChatListCell`.
    var chatListCell: RswiftResources.NibReference<ChatListCell> { .init(name: "ChatListCell", bundle: bundle) }

    /// Nib `ConnectAuditItemCell`.
    var connectAuditItemCell: RswiftResources.NibReference<ConnectAuditItemCell> { .init(name: "ConnectAuditItemCell", bundle: bundle) }

    /// Nib `ConnectionItemCell`.
    var connectionItemCell: RswiftResources.NibReference<ConnectionItemCell> { .init(name: "ConnectionItemCell", bundle: bundle) }

    /// Nib `CreateGroupHeaderView`.
    var createGroupHeaderView: RswiftResources.NibReference<CreateGroupHeaderView> { .init(name: "CreateGroupHeaderView", bundle: bundle) }

    /// Nib `CreatePostToolBar`.
    var createPostToolBar: RswiftResources.NibReference<CreatePostToolBar> { .init(name: "CreatePostToolBar", bundle: bundle) }

    /// Nib `ForgetPwdContainer`.
    var forgetPwdContainer: RswiftResources.NibReference<ForgetPwdContainer> { .init(name: "ForgetPwdContainer", bundle: bundle) }

    /// Nib `HomeHeaderJobItemCell`.
    var homeHeaderJobItemCell: RswiftResources.NibReference<HomeHeaderJobItemCell> { .init(name: "HomeHeaderJobItemCell", bundle: bundle) }

    /// Nib `HomeHeaderView`.
    var homeHeaderView: RswiftResources.NibReference<HomeHeaderView> { .init(name: "HomeHeaderView", bundle: bundle) }

    /// Nib `InputCodeContainer`.
    var inputCodeContainer: RswiftResources.NibReference<InputCodeContainer> { .init(name: "InputCodeContainer", bundle: bundle) }

    /// Nib `JobItemCell`.
    var jobItemCell: RswiftResources.NibReference<JobItemCell> { .init(name: "JobItemCell", bundle: bundle) }

    /// Nib `LoginView`.
    var loginView: RswiftResources.NibReference<LoginView> { .init(name: "LoginView", bundle: bundle) }

    /// Nib `NotificationCell`.
    var notificationCell: RswiftResources.NibReference<NotificationCell> { .init(name: "NotificationCell", bundle: bundle) }

    /// Nib `PostCommentCell`.
    var postCommentCell: RswiftResources.NibReference<PostCommentCell> { .init(name: "PostCommentCell", bundle: bundle) }

    /// Nib `PostDetailCommentFooterView`.
    var postDetailCommentFooterView: RswiftResources.NibReference<PostDetailCommentFooterView> { .init(name: "PostDetailCommentFooterView", bundle: bundle) }

    /// Nib `ProfileHeaderView`.
    var profileHeaderView: RswiftResources.NibReference<ProfileHeaderView> { .init(name: "ProfileHeaderView", bundle: bundle) }

    /// Nib `RegistAddAvatarView`.
    var registAddAvatarView: RswiftResources.NibReference<RegistAddAvatarView> { .init(name: "RegistAddAvatarView", bundle: bundle) }

    /// Nib `RegistConfirmView`.
    var registConfirmView: RswiftResources.NibReference<RegistConfirmView> { .init(name: "RegistConfirmView", bundle: bundle) }

    /// Nib `RegistInfoView`.
    var registInfoView: RswiftResources.NibReference<RegistInfoView> { .init(name: "RegistInfoView", bundle: bundle) }

    /// Nib `RegistProfileView`.
    var registProfileView: RswiftResources.NibReference<RegistProfileView> { .init(name: "RegistProfileView", bundle: bundle) }

    /// Nib `ResetPwdContainer`.
    var resetPwdContainer: RswiftResources.NibReference<ResetPwdContainer> { .init(name: "ResetPwdContainer", bundle: bundle) }

    func validate() throws {
      if UIKit.UIImage(named: "chevron.right", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'chevron.right' is used in nib 'AddUserEducationExperienceView', but couldn't be loaded.") }
      if UIKit.UIColor(named: "SeperatorColor", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'SeperatorColor' is used in nib 'AddUserEducationExperienceView', but couldn't be loaded.") }
      if UIKit.UIColor(named: "TextColor33", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'TextColor33' is used in nib 'AddUserEducationExperienceView', but couldn't be loaded.") }
      if UIKit.UIColor(named: "TextColor99", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'TextColor99' is used in nib 'AddUserEducationExperienceView', but couldn't be loaded.") }
      if UIKit.UIImage(named: "chevron.right", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'chevron.right' is used in nib 'AddUserWorkExperienceView', but couldn't be loaded.") }
      if UIKit.UIColor(named: "SeperatorColor", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'SeperatorColor' is used in nib 'AddUserWorkExperienceView', but couldn't be loaded.") }
      if UIKit.UIColor(named: "TextColor33", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'TextColor33' is used in nib 'AddUserWorkExperienceView', but couldn't be loaded.") }
      if UIKit.UIColor(named: "TextColor99", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'TextColor99' is used in nib 'AddUserWorkExperienceView', but couldn't be loaded.") }
      if UIKit.UIColor(named: "BackgroundColor", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'BackgroundColor' is used in nib 'AdminAddDomainContainer', but couldn't be loaded.") }
      if UIKit.UIColor(named: "TextColor33", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'TextColor33' is used in nib 'AdminAddDomainContainer', but couldn't be loaded.") }
      if UIKit.UIColor(named: "TheamColor", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'TheamColor' is used in nib 'AdminAddDomainContainer', but couldn't be loaded.") }
      if UIKit.UIColor(named: "BackgroundColor", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'BackgroundColor' is used in nib 'AdminAddRoleContainer', but couldn't be loaded.") }
      if UIKit.UIColor(named: "SeperatorColor", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'SeperatorColor' is used in nib 'AdminAddRoleContainer', but couldn't be loaded.") }
      if UIKit.UIColor(named: "TextColor33", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'TextColor33' is used in nib 'AdminAddRoleContainer', but couldn't be loaded.") }
      if UIKit.UIColor(named: "TheamColor", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'TheamColor' is used in nib 'AdminAddRoleContainer', but couldn't be loaded.") }
      if UIKit.UIColor(named: "BackgroundColor", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'BackgroundColor' is used in nib 'AdminAddRoomContainer', but couldn't be loaded.") }
      if UIKit.UIColor(named: "TextColor33", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'TextColor33' is used in nib 'AdminAddRoomContainer', but couldn't be loaded.") }
      if UIKit.UIColor(named: "TheamColor", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'TheamColor' is used in nib 'AdminAddRoomContainer', but couldn't be loaded.") }
      if UIKit.UIColor(named: "BackgroundColor", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'BackgroundColor' is used in nib 'AdminDepartmentDetailContainer', but couldn't be loaded.") }
      if UIKit.UIColor(named: "TextColor33", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'TextColor33' is used in nib 'AdminDepartmentDetailContainer', but couldn't be loaded.") }
      if UIKit.UIColor(named: "TheamColor", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'TheamColor' is used in nib 'AdminDepartmentDetailContainer', but couldn't be loaded.") }
      if UIKit.UIImage(named: "chevron.right", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'chevron.right' is used in nib 'AdminEditStaffContainer', but couldn't be loaded.") }
      if UIKit.UIColor(named: "BackgroundColor", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'BackgroundColor' is used in nib 'AdminEditStaffContainer', but couldn't be loaded.") }
      if UIKit.UIColor(named: "TextColor33", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'TextColor33' is used in nib 'AdminEditStaffContainer', but couldn't be loaded.") }
      if UIKit.UIColor(named: "TheamColor", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'TheamColor' is used in nib 'AdminEditStaffContainer', but couldn't be loaded.") }
      if UIKit.UIColor(named: "BackgroundColor", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'BackgroundColor' is used in nib 'AdminEditStaffExpContainer', but couldn't be loaded.") }
      if UIKit.UIColor(named: "TextColor33", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'TextColor33' is used in nib 'AdminEditStaffExpContainer', but couldn't be loaded.") }
      if UIKit.UIColor(named: "TheamColor", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'TheamColor' is used in nib 'AdminEditStaffExpContainer', but couldn't be loaded.") }
      if UIKit.UIImage(named: "ellipsis", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'ellipsis' is used in nib 'AdminNewStaffCell', but couldn't be loaded.") }
      if UIKit.UIColor(named: "BackgroundColor", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'BackgroundColor' is used in nib 'AdminNewStaffCell', but couldn't be loaded.") }
      if UIKit.UIColor(named: "TextColor33", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'TextColor33' is used in nib 'AdminNewStaffCell', but couldn't be loaded.") }
      if UIKit.UIColor(named: "TextColor77", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'TextColor77' is used in nib 'AdminNewStaffCell', but couldn't be loaded.") }
      if UIKit.UIImage(named: "ellipsis", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'ellipsis' is used in nib 'AdminRoleItemCell', but couldn't be loaded.") }
      if UIKit.UIColor(named: "IconColor", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'IconColor' is used in nib 'AdminRoleItemCell', but couldn't be loaded.") }
      if UIKit.UIColor(named: "TextColor33", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'TextColor33' is used in nib 'AdminRoleItemCell', but couldn't be loaded.") }
      if UIKit.UIImage(named: "ellipsis", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'ellipsis' is used in nib 'AdminRoomCell', but couldn't be loaded.") }
      if UIKit.UIColor(named: "IconColor", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'IconColor' is used in nib 'AdminRoomCell', but couldn't be loaded.") }
      if UIKit.UIColor(named: "TextColor33", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'TextColor33' is used in nib 'AdminRoomCell', but couldn't be loaded.") }
      if UIKit.UIImage(named: "ellipsis", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'ellipsis' is used in nib 'AdminStaffExpsCell', but couldn't be loaded.") }
      if UIKit.UIColor(named: "TextColor33", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'TextColor33' is used in nib 'AdminStaffExpsCell', but couldn't be loaded.") }
      if UIKit.UIColor(named: "TextColor77", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'TextColor77' is used in nib 'AdminStaffExpsCell', but couldn't be loaded.") }
      if UIKit.UIImage(named: "ellipsis", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'ellipsis' is used in nib 'AdminStaffItemCell', but couldn't be loaded.") }
      if UIKit.UIColor(named: "BackgroundColor", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'BackgroundColor' is used in nib 'AdminStaffItemCell', but couldn't be loaded.") }
      if UIKit.UIColor(named: "TextColor33", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'TextColor33' is used in nib 'AdminStaffItemCell', but couldn't be loaded.") }
      if UIKit.UIColor(named: "TextColor77", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'TextColor77' is used in nib 'AdminStaffItemCell', but couldn't be loaded.") }
      if UIKit.UIColor(named: "BackgroundColor", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'BackgroundColor' is used in nib 'BusinessCardCell', but couldn't be loaded.") }
      if UIKit.UIColor(named: "TextColor22", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'TextColor22' is used in nib 'BusinessCardCell', but couldn't be loaded.") }
      if UIKit.UIColor(named: "TextColor66", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'TextColor66' is used in nib 'BusinessCardCell', but couldn't be loaded.") }
      if UIKit.UIColor(named: "TheamColor", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'TheamColor' is used in nib 'BusinessCardCell', but couldn't be loaded.") }
      if UIKit.UIImage(named: "person.fill.checkmark", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'person.fill.checkmark' is used in nib 'CaledarItemCell', but couldn't be loaded.") }
      if UIKit.UIImage(named: "repeat", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'repeat' is used in nib 'CaledarItemCell', but couldn't be loaded.") }
      if UIKit.UIColor(named: "TextColor52", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'TextColor52' is used in nib 'CaledarItemCell', but couldn't be loaded.") }
      if UIKit.UIColor(named: "TextColor74", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'TextColor74' is used in nib 'CaledarItemCell', but couldn't be loaded.") }
      if UIKit.UIColor(named: "TheamColor", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'TheamColor' is used in nib 'ConnectAuditItemCell', but couldn't be loaded.") }
      if UIKit.UIImage(named: "proile_user", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'proile_user' is used in nib 'ConnectionItemCell', but couldn't be loaded.") }
      if UIKit.UIColor(named: "TextColor52", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'TextColor52' is used in nib 'ConnectionItemCell', but couldn't be loaded.") }
      if UIKit.UIColor(named: "TheamColor", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'TheamColor' is used in nib 'ConnectionItemCell', but couldn't be loaded.") }
      if UIKit.UIImage(named: "plus.circle", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'plus.circle' is used in nib 'CreateGroupHeaderView', but couldn't be loaded.") }
      if UIKit.UIColor(named: "BackgroundColor", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'BackgroundColor' is used in nib 'CreateGroupHeaderView', but couldn't be loaded.") }
      if UIKit.UIColor(named: "TextColor52", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'TextColor52' is used in nib 'CreateGroupHeaderView', but couldn't be loaded.") }
      if UIKit.UIColor(named: "TextColor74", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'TextColor74' is used in nib 'CreateGroupHeaderView', but couldn't be loaded.") }
      if UIKit.UIColor(named: "TheamColor", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'TheamColor' is used in nib 'CreateGroupHeaderView', but couldn't be loaded.") }
      if UIKit.UIImage(named: "paperplane.fill", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'paperplane.fill' is used in nib 'CreatePostToolBar', but couldn't be loaded.") }
      if UIKit.UIImage(named: "toolbar_icon_at", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'toolbar_icon_at' is used in nib 'CreatePostToolBar', but couldn't be loaded.") }
      if UIKit.UIImage(named: "toolbar_icon_hashtag", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'toolbar_icon_hashtag' is used in nib 'CreatePostToolBar', but couldn't be loaded.") }
      if UIKit.UIImage(named: "toolbar_icon_image", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'toolbar_icon_image' is used in nib 'CreatePostToolBar', but couldn't be loaded.") }
      if UIKit.UIImage(named: "video", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'video' is used in nib 'CreatePostToolBar', but couldn't be loaded.") }
      if UIKit.UIColor(named: "AccentColor", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'AccentColor' is used in nib 'ForgetPwdContainer', but couldn't be loaded.") }
      if UIKit.UIColor(named: "SeperatorColor", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'SeperatorColor' is used in nib 'ForgetPwdContainer', but couldn't be loaded.") }
      if UIKit.UIColor(named: "TextColor22", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'TextColor22' is used in nib 'ForgetPwdContainer', but couldn't be loaded.") }
      if UIKit.UIImage(named: "job_mark", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'job_mark' is used in nib 'HomeHeaderJobItemCell', but couldn't be loaded.") }
      if UIKit.UIImage(named: "placeholder", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'placeholder' is used in nib 'HomeHeaderJobItemCell', but couldn't be loaded.") }
      if UIKit.UIColor(named: "TextColor52", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'TextColor52' is used in nib 'HomeHeaderJobItemCell', but couldn't be loaded.") }
      if UIKit.UIImage(named: "search_icon", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'search_icon' is used in nib 'HomeHeaderView', but couldn't be loaded.") }
      if UIKit.UIColor(named: "TextColor162C46", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'TextColor162C46' is used in nib 'HomeHeaderView', but couldn't be loaded.") }
      if UIKit.UIColor(named: "TextColor52", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'TextColor52' is used in nib 'HomeHeaderView', but couldn't be loaded.") }
      if UIKit.UIColor(named: "TheamColor", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'TheamColor' is used in nib 'HomeHeaderView', but couldn't be loaded.") }
      if UIKit.UIColor(named: "AccentColor", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'AccentColor' is used in nib 'InputCodeContainer', but couldn't be loaded.") }
      if UIKit.UIColor(named: "SeperatorColor", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'SeperatorColor' is used in nib 'InputCodeContainer', but couldn't be loaded.") }
      if UIKit.UIColor(named: "TextColor22", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'TextColor22' is used in nib 'InputCodeContainer', but couldn't be loaded.") }
      if UIKit.UIImage(named: "job_location", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'job_location' is used in nib 'JobItemCell', but couldn't be loaded.") }
      if UIKit.UIImage(named: "job_mark", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'job_mark' is used in nib 'JobItemCell', but couldn't be loaded.") }
      if UIKit.UIImage(named: "placeholder", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'placeholder' is used in nib 'JobItemCell', but couldn't be loaded.") }
      if UIKit.UIColor(named: "TextColor52", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'TextColor52' is used in nib 'JobItemCell', but couldn't be loaded.") }
      if UIKit.UIColor(named: "TheamColor", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'TheamColor' is used in nib 'JobItemCell', but couldn't be loaded.") }
      if UIKit.UIImage(named: "applelogo", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'applelogo' is used in nib 'LoginView', but couldn't be loaded.") }
      if UIKit.UIImage(named: "google", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'google' is used in nib 'LoginView', but couldn't be loaded.") }
      if UIKit.UIImage(named: "password_invisible", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'password_invisible' is used in nib 'LoginView', but couldn't be loaded.") }
      if UIKit.UIImage(named: "password_visible", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'password_visible' is used in nib 'LoginView', but couldn't be loaded.") }
      if UIKit.UIColor(named: "TheamColor", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'TheamColor' is used in nib 'LoginView', but couldn't be loaded.") }
      if UIKit.UIColor(named: "label", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'label' is used in nib 'LoginView', but couldn't be loaded.") }
      if UIKit.UIColor(named: "BackgroundColor", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'BackgroundColor' is used in nib 'NotificationCell', but couldn't be loaded.") }
      if UIKit.UIColor(named: "TextColor22", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'TextColor22' is used in nib 'NotificationCell', but couldn't be loaded.") }
      if UIKit.UIColor(named: "TextColor77", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'TextColor77' is used in nib 'NotificationCell', but couldn't be loaded.") }
      if UIKit.UIImage(named: "post_comment_comment", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'post_comment_comment' is used in nib 'PostCommentCell', but couldn't be loaded.") }
      if UIKit.UIImage(named: "post_comment_unlike", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'post_comment_unlike' is used in nib 'PostCommentCell', but couldn't be loaded.") }
      if UIKit.UIColor(named: "IconColor", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'IconColor' is used in nib 'PostCommentCell', but couldn't be loaded.") }
      if UIKit.UIColor(named: "TextColor52", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'TextColor52' is used in nib 'PostCommentCell', but couldn't be loaded.") }
      if UIKit.UIColor(named: "placeholderColor", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'placeholderColor' is used in nib 'PostCommentCell', but couldn't be loaded.") }
      if UIKit.UIColor(named: "BackgroundColor", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'BackgroundColor' is used in nib 'PostDetailCommentFooterView', but couldn't be loaded.") }
      if UIKit.UIColor(named: "SeperatorColor", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'SeperatorColor' is used in nib 'PostDetailCommentFooterView', but couldn't be loaded.") }
      if UIKit.UIColor(named: "TextColor162C46", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'TextColor162C46' is used in nib 'PostDetailCommentFooterView', but couldn't be loaded.") }
      if UIKit.UIColor(named: "TextColor74", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'TextColor74' is used in nib 'PostDetailCommentFooterView', but couldn't be loaded.") }
      if #available(iOS 13.0, *) { if UIKit.UIImage(systemName: "chevron.forward") == nil { throw RswiftResources.ValidationError("[R.swift] System image named 'chevron.forward' is used in nib 'ProfileHeaderView', but couldn't be loaded.") } }
      if UIKit.UIImage(named: "proile_user", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'proile_user' is used in nib 'ProfileHeaderView', but couldn't be loaded.") }
      if UIKit.UIColor(named: "BackgroundColor", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'BackgroundColor' is used in nib 'ProfileHeaderView', but couldn't be loaded.") }
      if UIKit.UIImage(named: "proile_user", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Image named 'proile_user' is used in nib 'RegistAddAvatarView', but couldn't be loaded.") }
      if UIKit.UIColor(named: "TheamColor", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'TheamColor' is used in nib 'RegistAddAvatarView', but couldn't be loaded.") }
      if UIKit.UIColor(named: "TheamColor", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'TheamColor' is used in nib 'RegistConfirmView', but couldn't be loaded.") }
      if UIKit.UIColor(named: "TheamColor", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'TheamColor' is used in nib 'RegistInfoView', but couldn't be loaded.") }
      if UIKit.UIColor(named: "TheamColor", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'TheamColor' is used in nib 'RegistProfileView', but couldn't be loaded.") }
      if UIKit.UIColor(named: "AccentColor", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'AccentColor' is used in nib 'ResetPwdContainer', but couldn't be loaded.") }
      if UIKit.UIColor(named: "SeperatorColor", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'SeperatorColor' is used in nib 'ResetPwdContainer', but couldn't be loaded.") }
      if UIKit.UIColor(named: "TextColor22", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'TextColor22' is used in nib 'ResetPwdContainer', but couldn't be loaded.") }
    }
  }

  /// This `_R.storyboard` struct is generated, and contains static references to 2 storyboards.
  struct storyboard {
    let bundle: Foundation.Bundle
    var attachmentDetailsViewController: attachmentDetailsViewController { .init(bundle: bundle) }
    var launchScreen: launchScreen { .init(bundle: bundle) }

    func attachmentDetailsViewController(bundle: Foundation.Bundle) -> attachmentDetailsViewController {
      .init(bundle: bundle)
    }
    func launchScreen(bundle: Foundation.Bundle) -> launchScreen {
      .init(bundle: bundle)
    }
    func validate() throws {
      try self.attachmentDetailsViewController.validate()
      try self.launchScreen.validate()
    }


    /// Storyboard `AttachmentDetailsViewController`.
    struct attachmentDetailsViewController: RswiftResources.StoryboardReference {
      let bundle: Foundation.Bundle

      let name = "AttachmentDetailsViewController"

      var attachmentDetailsViewController: RswiftResources.StoryboardViewControllerIdentifier<AttachmentDetailsViewController> { .init(identifier: "AttachmentDetailsViewController", storyboard: name, bundle: bundle) }

      func validate() throws {
        if attachmentDetailsViewController() == nil { throw RswiftResources.ValidationError("[R.swift] ViewController with identifier 'attachmentDetailsViewController' could not be loaded from storyboard 'AttachmentDetailsViewController' as 'AttachmentDetailsViewController'.") }
      }
    }

    /// Storyboard `LaunchScreen`.
    struct launchScreen: RswiftResources.StoryboardReference, RswiftResources.InitialControllerContainer {
      typealias InitialController = UIKit.UIViewController

      let bundle: Foundation.Bundle

      let name = "LaunchScreen"
      func validate() throws {
        if UIKit.UIColor(named: "TheamColor", in: bundle, compatibleWith: nil) == nil { throw RswiftResources.ValidationError("[R.swift] Color named 'TheamColor' is used in storyboard 'LaunchScreen', but couldn't be loaded.") }
      }
    }
  }
}